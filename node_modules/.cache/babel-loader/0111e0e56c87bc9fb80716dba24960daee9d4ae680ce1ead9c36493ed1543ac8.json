{"ast":null,"code":"var _jsxFileName = \"/Users/kseniia/Desktop/WillPsGn/src/components/DefinitionMatch.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DefinitionMatch = ({\n  words,\n  onAnswer\n}) => {\n  _s();\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [selectedDefinition, setSelectedDefinition] = useState(null);\n  const [matchedPairs, setMatchedPairs] = useState(new Set());\n  const [shuffledDefinitions, setShuffledDefinitions] = useState([]);\n  useEffect(() => {\n    // Shuffle definitions when component mounts or words change\n    const definitions = words.map(word => word.definition);\n    setShuffledDefinitions([...definitions].sort(() => Math.random() - 0.5));\n  }, [words]);\n  const handleWordClick = word => {\n    if (matchedPairs.has(word.id)) return;\n    setSelectedWord(word);\n  };\n  const handleDefinitionClick = definition => {\n    if (!selectedWord) return;\n    const isCorrect = selectedWord.definition === definition;\n    if (isCorrect) {\n      setMatchedPairs(prev => {\n        const newSet = new Set(prev);\n        newSet.add(selectedWord.id);\n        return newSet;\n      });\n    }\n    onAnswer(isCorrect);\n    setSelectedWord(null);\n    setSelectedDefinition(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"match-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-list\",\n      children: words.map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `word-item ${(selectedWord === null || selectedWord === void 0 ? void 0 : selectedWord.id) === word.id ? \"selected\" : \"\"} ${matchedPairs.has(word.id) ? \"correct\" : \"\"}`,\n        onClick: () => handleWordClick(word),\n        children: word.word\n      }, word.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"definition-list\",\n      children: shuffledDefinitions.map((definition, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `definition-item ${selectedDefinition === definition ? \"selected\" : \"\"} ${selectedWord && definition === selectedWord.definition ? \"correct\" : \"\"}`,\n        onClick: () => handleDefinitionClick(definition),\n        children: definition\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(DefinitionMatch, \"T6SWn3wGQzj9LsgcFY1MZkxCksc=\");\n_c = DefinitionMatch;\nexport default DefinitionMatch;\nvar _c;\n$RefreshReg$(_c, \"DefinitionMatch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DefinitionMatch","words","onAnswer","_s","selectedWord","setSelectedWord","selectedDefinition","setSelectedDefinition","matchedPairs","setMatchedPairs","Set","shuffledDefinitions","setShuffledDefinitions","definitions","map","word","definition","sort","Math","random","handleWordClick","has","id","handleDefinitionClick","isCorrect","prev","newSet","add","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/kseniia/Desktop/WillPsGn/src/components/DefinitionMatch.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Word } from \"../types/game\";\n\ninterface DefinitionMatchProps {\n  words: Word[];\n  onAnswer: (isCorrect: boolean) => void;\n}\n\nconst DefinitionMatch: React.FC<DefinitionMatchProps> = ({\n  words,\n  onAnswer,\n}) => {\n  const [selectedWord, setSelectedWord] = useState<Word | null>(null);\n  const [selectedDefinition, setSelectedDefinition] = useState<string | null>(\n    null\n  );\n  const [matchedPairs, setMatchedPairs] = useState<Set<number>>(new Set());\n  const [shuffledDefinitions, setShuffledDefinitions] = useState<string[]>([]);\n\n  useEffect(() => {\n    // Shuffle definitions when component mounts or words change\n    const definitions = words.map((word) => word.definition);\n    setShuffledDefinitions([...definitions].sort(() => Math.random() - 0.5));\n  }, [words]);\n\n  const handleWordClick = (word: Word) => {\n    if (matchedPairs.has(word.id)) return;\n    setSelectedWord(word);\n  };\n\n  const handleDefinitionClick = (definition: string) => {\n    if (!selectedWord) return;\n\n    const isCorrect = selectedWord.definition === definition;\n    if (isCorrect) {\n      setMatchedPairs((prev) => {\n        const newSet = new Set(prev);\n        newSet.add(selectedWord.id);\n        return newSet;\n      });\n    }\n\n    onAnswer(isCorrect);\n    setSelectedWord(null);\n    setSelectedDefinition(null);\n  };\n\n  return (\n    <div className=\"match-container\">\n      <div className=\"word-list\">\n        {words.map((word) => (\n          <div\n            key={word.id}\n            className={`word-item ${\n              selectedWord?.id === word.id ? \"selected\" : \"\"\n            } ${matchedPairs.has(word.id) ? \"correct\" : \"\"}`}\n            onClick={() => handleWordClick(word)}\n          >\n            {word.word}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"definition-list\">\n        {shuffledDefinitions.map((definition, index) => (\n          <div\n            key={index}\n            className={`definition-item ${\n              selectedDefinition === definition ? \"selected\" : \"\"\n            } ${\n              selectedWord && definition === selectedWord.definition\n                ? \"correct\"\n                : \"\"\n            }`}\n            onClick={() => handleDefinitionClick(definition)}\n          >\n            {definition}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DefinitionMatch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}