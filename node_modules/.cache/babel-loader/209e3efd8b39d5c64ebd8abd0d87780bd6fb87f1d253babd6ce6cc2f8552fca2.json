{"ast":null,"code":"var _jsxFileName = \"/Users/kseniia/Desktop/WillPsGn/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./styles/Game.css\";\nimport DefinitionMatch from \"./components/DefinitionMatch\";\nimport SynonymExercise from \"./components/SynonymExercise\";\nimport AntonymExercise from \"./components/AntonymExercise\";\nimport MemoryGame from \"./components/MemoryGame\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialStats = {\n  correctAnswers: 0,\n  totalQuestions: 0,\n  currentStreak: 0,\n  bestStreak: 0\n};\nconst initialGameState = {\n  currentExercise: null,\n  stats: initialStats,\n  progress: 0,\n  selectedWords: [],\n  matchedPairs: new Set()\n};\n\n// IELTS Vocabulary data - Topic 15: Signposting expressions for writing\nconst vocabularyData = [{\n  id: 1,\n  word: \"Furthermore\",\n  definition: \"Used to introduce a piece of information or opinion that adds to or supports the previous one\",\n  synonyms: [\"Moreover\", \"Additionally\", \"Besides\"],\n  antonyms: [\"However\", \"Nevertheless\", \"Conversely\", \"On the contrary\", \"Instead\", \"Alternatively\"]\n}, {\n  id: 2,\n  word: \"Moreover\",\n  definition: \"Used to introduce a piece of information that adds to or supports the previous statement\",\n  synonyms: [\"Furthermore\", \"Additionally\", \"Besides\"],\n  antonyms: [\"However\", \"Nevertheless\", \"Conversely\", \"On the other hand\", \"Alternatively\", \"Instead\"]\n}, {\n  id: 3,\n  word: \"Nevertheless\",\n  definition: \"Used when saying something that contrasts with what has just been said\",\n  synonyms: [\"However\", \"Nonetheless\", \"Still\"],\n  antonyms: [\"Furthermore\", \"Moreover\", \"Additionally\", \"Similarly\", \"Likewise\", \"Therefore\"]\n}, {\n  id: 4,\n  word: \"Whereas\",\n  definition: \"Used to introduce a comment which contrasts with what is said in the main clause\",\n  synonyms: [\"While\", \"Although\", \"Though\"],\n  antonyms: [\"Similarly\", \"Likewise\", \"Equally\", \"Correspondingly\", \"In the same way\", \"Therefore\"]\n}, {\n  id: 5,\n  word: \"Whilst\",\n  definition: \"Means the same as while, used mainly in formal and literary contexts\",\n  synonyms: [\"While\", \"Although\", \"Whereas\"],\n  antonyms: [\"Similarly\", \"Likewise\", \"Therefore\", \"Consequently\", \"Hence\", \"Thus\"]\n}, {\n  id: 6,\n  word: \"Former\",\n  definition: \"When two people, things, or groups have just been mentioned, you can refer to the first of them as the former\",\n  synonyms: [\"First\", \"Previous\", \"Earlier\"],\n  antonyms: [\"Latter\", \"Last\", \"Final\", \"Second\", \"Following\", \"Subsequent\"]\n}, {\n  id: 7,\n  word: \"Initial\",\n  definition: \"Used to describe something that happens at the beginning of a process\",\n  synonyms: [\"First\", \"Opening\", \"Beginning\"],\n  antonyms: [\"Final\", \"Last\", \"Concluding\", \"Ultimate\", \"Ending\", \"Terminal\"]\n}, {\n  id: 8,\n  word: \"Latter\",\n  definition: \"When two people, things, or groups have just been mentioned, you can refer to the second of them as the latter\",\n  synonyms: [\"Second\", \"Last\", \"Final\"],\n  antonyms: [\"Former\", \"First\", \"Previous\", \"Earlier\", \"Initial\", \"Opening\"]\n}, {\n  id: 9,\n  word: \"Prior\",\n  definition: \"Used to indicate that something has already happened, or must happen, before another event takes place\",\n  synonyms: [\"Before\", \"Earlier\", \"Previous\"],\n  antonyms: [\"After\", \"Following\", \"Subsequent\", \"Later\", \"Future\", \"Next\"]\n}, {\n  id: 10,\n  word: \"Respectively\",\n  definition: \"Means in the same order as the items that you have just mentioned\",\n  synonyms: [\"Correspondingly\", \"In order\", \"Sequentially\"],\n  antonyms: [\"Randomly\", \"Haphazardly\", \"Irregularly\", \"Chaotically\", \"Unsystematically\", \"Arbitrarily\"]\n}, {\n  id: 11,\n  word: \"Subsequent\",\n  definition: \"Used to describe something that happened or existed after the time or event that has just been referred to\",\n  synonyms: [\"Following\", \"Later\", \"Next\"],\n  antonyms: [\"Prior\", \"Previous\", \"Earlier\", \"Former\", \"Preceding\", \"Initial\"]\n}, {\n  id: 12,\n  word: \"On balance\",\n  definition: \"Used to indicate that you are stating an opinion after considering all the relevant facts or arguments\",\n  synonyms: [\"Overall\", \"All things considered\", \"Generally\"],\n  antonyms: [\"Specifically\", \"Particularly\", \"Individually\", \"Separately\", \"Distinctly\", \"Precisely\"]\n}, {\n  id: 13,\n  word: \"Overall\",\n  definition: \"Used to indicate that you are talking about a situation in general or about the whole of something\",\n  synonyms: [\"Generally\", \"All in all\", \"On balance\"],\n  antonyms: [\"Specifically\", \"Particularly\", \"Individually\", \"Separately\", \"Partially\", \"Locally\"]\n}, {\n  id: 14,\n  word: \"Hence\",\n  definition: \"Used to indicate that the statement you are about to make is a consequence of what you have just said\",\n  synonyms: [\"Therefore\", \"Thus\", \"Consequently\"],\n  antonyms: [\"However\", \"Nevertheless\", \"Despite this\", \"Regardless\", \"Notwithstanding\", \"Still\"]\n}, {\n  id: 15,\n  word: \"Thus\",\n  definition: \"Used to show that what you are about to mention is the result or consequence of something else that you have just mentioned\",\n  synonyms: [\"Therefore\", \"Hence\", \"Consequently\"],\n  antonyms: [\"However\", \"Nevertheless\", \"Despite this\", \"Regardless\", \"Conversely\", \"Instead\"]\n}];\nconst App = () => {\n  _s();\n  const [gameState, setGameState] = useState(initialGameState);\n  const [exerciseStartTime, setExerciseStartTime] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [mistakes, setMistakes] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [showWordList, setShowWordList] = useState(false);\n  const startExercise = type => {\n    // Shuffle words for variety - different starting point each time\n    const shuffledWords = [...vocabularyData].sort(() => Math.random() - 0.5);\n    setGameState(prev => ({\n      ...prev,\n      currentExercise: type,\n      progress: 0,\n      selectedWords: type === \"memory\" ? shuffledWords.slice(0, 6) : shuffledWords,\n      matchedPairs: new Set()\n    }));\n    setExerciseStartTime(Date.now());\n    setCurrentScore(0);\n    setMistakes(0);\n    setGameOver(false);\n  };\n  const goBackToMenu = () => {\n    setGameState(prev => ({\n      ...prev,\n      currentExercise: null,\n      progress: 0,\n      selectedWords: [],\n      matchedPairs: new Set()\n    }));\n    setExerciseStartTime(0);\n    setCurrentScore(0);\n    setCurrentTime(\"00:00\");\n    setMistakes(0);\n    setGameOver(false);\n    setShowWordList(false);\n  };\n  const showWordListView = () => {\n    setShowWordList(true);\n  };\n  const restartCurrentExercise = () => {\n    if (gameState.currentExercise) {\n      startExercise(gameState.currentExercise);\n    }\n  };\n  const updateStats = isCorrect => {\n    if (gameOver) return; // Don't update if game is over\n\n    // Handle mistake counting first, outside of setGameState\n    if (!isCorrect && gameState.currentExercise === \"definition\") {\n      setMistakes(prev => {\n        const newMistakes = prev + 1;\n        if (newMistakes >= 4) {\n          setGameOver(true);\n        }\n        return newMistakes;\n      });\n    }\n\n    // Update game stats\n    setGameState(prev => {\n      const newStats = {\n        ...prev.stats\n      };\n      newStats.totalQuestions++;\n      if (isCorrect) {\n        newStats.correctAnswers++;\n        newStats.currentStreak++;\n        newStats.bestStreak = Math.max(newStats.bestStreak, newStats.currentStreak);\n        setCurrentScore(prev => prev + 1);\n      } else {\n        newStats.currentStreak = 0;\n        // Mistake counting is now handled above, outside this callback\n      }\n      return {\n        ...prev,\n        stats: newStats\n      };\n    });\n  };\n\n  // Calculate progress percentage based on exercise type\n  const getProgressPercentage = () => {\n    if (!gameState.currentExercise || gameState.selectedWords.length === 0) {\n      return \"0%\";\n    }\n    switch (gameState.currentExercise) {\n      case \"memory\":\n        // For memory game: matched pairs / total pairs\n        const totalPairs = gameState.selectedWords.length;\n        const matchedPairs = gameState.matchedPairs.size;\n        return `${Math.round(matchedPairs / totalPairs * 100)}%`;\n      case \"synonym\":\n      case \"antonym\":\n        // For these exercises: correct answers / total words\n        const totalWords = gameState.selectedWords.length;\n        return `${Math.round(currentScore / totalWords * 100)}%`;\n      case \"definition\":\n        // For definition match: use current score (which reflects actual matches)\n        return `${Math.round(currentScore / gameState.selectedWords.length * 100)}%`;\n      default:\n        return \"0%\";\n    }\n  };\n\n  // Add function to update progress for synonym/antonym exercises\n  const updateProgress = currentIndex => {\n    setGameState(prev => ({\n      ...prev,\n      progress: currentIndex + 1\n    }));\n  };\n  const renderExercise = () => {\n    if (gameOver) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-over-animation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Game Over!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You made 4 mistakes. Don't worry, practice makes perfect!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your score: \", currentScore, \"/\", gameState.selectedWords.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-over-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"game-btn\",\n              onClick: restartCurrentExercise,\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back-btn\",\n              onClick: goBackToMenu,\n              children: \"Back to Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this);\n    }\n    switch (gameState.currentExercise) {\n      case \"definition\":\n        return /*#__PURE__*/_jsxDEV(DefinitionMatch, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this);\n      case \"synonym\":\n        return /*#__PURE__*/_jsxDEV(SynonymExercise, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats,\n          onProgress: updateProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this);\n      case \"antonym\":\n        return /*#__PURE__*/_jsxDEV(AntonymExercise, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats,\n          onProgress: updateProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this);\n      case \"memory\":\n        return /*#__PURE__*/_jsxDEV(MemoryGame, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: !gameState.currentExercise && !showWordList ?\n    /*#__PURE__*/\n    // Welcome Screen\n    _jsxDEV(\"div\", {\n      className: \"welcome-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to IELTS Vocabulary Practice!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"welcome-description\",\n          children: \"Master 15 essential signposting expressions for writing through 4 interactive exercises:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exercise-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-item\",\n            onClick: () => startExercise(\"definition\"),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"preview-icon\",\n              children: \"\\uD83D\\uDCDA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Definition Match\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-item\",\n            onClick: () => startExercise(\"synonym\"),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"preview-icon\",\n              children: \"\\uD83D\\uDD17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Synonym Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-item\",\n            onClick: () => startExercise(\"antonym\"),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"preview-icon\",\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Antonym Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-item\",\n            onClick: () => startExercise(\"memory\"),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"preview-icon\",\n              children: \"\\uD83E\\uDDE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Memory Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info-highlight\",\n            children: \"\\uD83D\\uDCDA Topic 15: Signposting expressions for writing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word-list-section\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-item word-list-button centered\",\n              onClick: showWordListView,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"preview-icon\",\n                children: \"\\uD83D\\uDCDD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Word List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this) : showWordList ?\n    /*#__PURE__*/\n    // Word List View\n    _jsxDEV(\"div\", {\n      className: \"word-list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-list-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCDD Vocabulary Reference List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"word-list-description\",\n          children: \"Study all 15 signposting expressions before starting the exercises:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-list-grid\",\n          children: vocabularyData.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-number\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-term\",\n              children: word.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-definition\",\n              children: word.definition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-synonyms\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Synonyms:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 21\n              }, this), \" \", word.synonyms.join(\", \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 19\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-list-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-btn\",\n            onClick: goBackToMenu,\n            children: \"Back to Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise active\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"exercise-title\",\n        children: [gameState.currentExercise ? gameState.currentExercise.charAt(0).toUpperCase() + gameState.currentExercise.slice(1) : \"Exercise\", \" \", \"Exercise\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${gameState.progress / gameState.selectedWords.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this), !gameOver && gameState.currentExercise === \"definition\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistake-counter\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `mistakes ${mistakes >= 3 ? \"danger\" : \"\"}`,\n          children: [\"Mistakes: \", mistakes, \"/4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 13\n      }, this), renderExercise(), !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: goBackToMenu,\n        children: \"Back to Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2flrTdkPiZn+C4z5GuGr92BBxOg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DefinitionMatch","SynonymExercise","AntonymExercise","MemoryGame","jsxDEV","_jsxDEV","initialStats","correctAnswers","totalQuestions","currentStreak","bestStreak","initialGameState","currentExercise","stats","progress","selectedWords","matchedPairs","Set","vocabularyData","id","word","definition","synonyms","antonyms","App","_s","gameState","setGameState","exerciseStartTime","setExerciseStartTime","currentScore","setCurrentScore","mistakes","setMistakes","gameOver","setGameOver","showWordList","setShowWordList","startExercise","type","shuffledWords","sort","Math","random","prev","slice","Date","now","goBackToMenu","setCurrentTime","showWordListView","restartCurrentExercise","updateStats","isCorrect","newMistakes","newStats","max","getProgressPercentage","length","totalPairs","size","round","totalWords","updateProgress","currentIndex","renderExercise","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","words","onAnswer","onProgress","map","index","join","charAt","toUpperCase","style","width","_c","$RefreshReg$"],"sources":["/Users/kseniia/Desktop/WillPsGn/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles/Game.css\";\nimport { GameState, Word, GameStats, ExerciseType } from \"./types/game\";\nimport DefinitionMatch from \"./components/DefinitionMatch\";\nimport SynonymExercise from \"./components/SynonymExercise\";\nimport AntonymExercise from \"./components/AntonymExercise\";\nimport MemoryGame from \"./components/MemoryGame\";\n\nconst initialStats: GameStats = {\n  correctAnswers: 0,\n  totalQuestions: 0,\n  currentStreak: 0,\n  bestStreak: 0,\n};\n\nconst initialGameState: GameState = {\n  currentExercise: null,\n  stats: initialStats,\n  progress: 0,\n  selectedWords: [],\n  matchedPairs: new Set(),\n};\n\n// IELTS Vocabulary data - Topic 15: Signposting expressions for writing\nconst vocabularyData: Word[] = [\n  {\n    id: 1,\n    word: \"Furthermore\",\n    definition:\n      \"Used to introduce a piece of information or opinion that adds to or supports the previous one\",\n    synonyms: [\"Moreover\", \"Additionally\", \"Besides\"],\n    antonyms: [\n      \"However\",\n      \"Nevertheless\",\n      \"Conversely\",\n      \"On the contrary\",\n      \"Instead\",\n      \"Alternatively\",\n    ],\n  },\n  {\n    id: 2,\n    word: \"Moreover\",\n    definition:\n      \"Used to introduce a piece of information that adds to or supports the previous statement\",\n    synonyms: [\"Furthermore\", \"Additionally\", \"Besides\"],\n    antonyms: [\n      \"However\",\n      \"Nevertheless\",\n      \"Conversely\",\n      \"On the other hand\",\n      \"Alternatively\",\n      \"Instead\",\n    ],\n  },\n  {\n    id: 3,\n    word: \"Nevertheless\",\n    definition:\n      \"Used when saying something that contrasts with what has just been said\",\n    synonyms: [\"However\", \"Nonetheless\", \"Still\"],\n    antonyms: [\n      \"Furthermore\",\n      \"Moreover\",\n      \"Additionally\",\n      \"Similarly\",\n      \"Likewise\",\n      \"Therefore\",\n    ],\n  },\n  {\n    id: 4,\n    word: \"Whereas\",\n    definition:\n      \"Used to introduce a comment which contrasts with what is said in the main clause\",\n    synonyms: [\"While\", \"Although\", \"Though\"],\n    antonyms: [\n      \"Similarly\",\n      \"Likewise\",\n      \"Equally\",\n      \"Correspondingly\",\n      \"In the same way\",\n      \"Therefore\",\n    ],\n  },\n  {\n    id: 5,\n    word: \"Whilst\",\n    definition:\n      \"Means the same as while, used mainly in formal and literary contexts\",\n    synonyms: [\"While\", \"Although\", \"Whereas\"],\n    antonyms: [\n      \"Similarly\",\n      \"Likewise\",\n      \"Therefore\",\n      \"Consequently\",\n      \"Hence\",\n      \"Thus\",\n    ],\n  },\n  {\n    id: 6,\n    word: \"Former\",\n    definition:\n      \"When two people, things, or groups have just been mentioned, you can refer to the first of them as the former\",\n    synonyms: [\"First\", \"Previous\", \"Earlier\"],\n    antonyms: [\"Latter\", \"Last\", \"Final\", \"Second\", \"Following\", \"Subsequent\"],\n  },\n  {\n    id: 7,\n    word: \"Initial\",\n    definition:\n      \"Used to describe something that happens at the beginning of a process\",\n    synonyms: [\"First\", \"Opening\", \"Beginning\"],\n    antonyms: [\"Final\", \"Last\", \"Concluding\", \"Ultimate\", \"Ending\", \"Terminal\"],\n  },\n  {\n    id: 8,\n    word: \"Latter\",\n    definition:\n      \"When two people, things, or groups have just been mentioned, you can refer to the second of them as the latter\",\n    synonyms: [\"Second\", \"Last\", \"Final\"],\n    antonyms: [\"Former\", \"First\", \"Previous\", \"Earlier\", \"Initial\", \"Opening\"],\n  },\n  {\n    id: 9,\n    word: \"Prior\",\n    definition:\n      \"Used to indicate that something has already happened, or must happen, before another event takes place\",\n    synonyms: [\"Before\", \"Earlier\", \"Previous\"],\n    antonyms: [\"After\", \"Following\", \"Subsequent\", \"Later\", \"Future\", \"Next\"],\n  },\n  {\n    id: 10,\n    word: \"Respectively\",\n    definition:\n      \"Means in the same order as the items that you have just mentioned\",\n    synonyms: [\"Correspondingly\", \"In order\", \"Sequentially\"],\n    antonyms: [\n      \"Randomly\",\n      \"Haphazardly\",\n      \"Irregularly\",\n      \"Chaotically\",\n      \"Unsystematically\",\n      \"Arbitrarily\",\n    ],\n  },\n  {\n    id: 11,\n    word: \"Subsequent\",\n    definition:\n      \"Used to describe something that happened or existed after the time or event that has just been referred to\",\n    synonyms: [\"Following\", \"Later\", \"Next\"],\n    antonyms: [\n      \"Prior\",\n      \"Previous\",\n      \"Earlier\",\n      \"Former\",\n      \"Preceding\",\n      \"Initial\",\n    ],\n  },\n  {\n    id: 12,\n    word: \"On balance\",\n    definition:\n      \"Used to indicate that you are stating an opinion after considering all the relevant facts or arguments\",\n    synonyms: [\"Overall\", \"All things considered\", \"Generally\"],\n    antonyms: [\n      \"Specifically\",\n      \"Particularly\",\n      \"Individually\",\n      \"Separately\",\n      \"Distinctly\",\n      \"Precisely\",\n    ],\n  },\n  {\n    id: 13,\n    word: \"Overall\",\n    definition:\n      \"Used to indicate that you are talking about a situation in general or about the whole of something\",\n    synonyms: [\"Generally\", \"All in all\", \"On balance\"],\n    antonyms: [\n      \"Specifically\",\n      \"Particularly\",\n      \"Individually\",\n      \"Separately\",\n      \"Partially\",\n      \"Locally\",\n    ],\n  },\n  {\n    id: 14,\n    word: \"Hence\",\n    definition:\n      \"Used to indicate that the statement you are about to make is a consequence of what you have just said\",\n    synonyms: [\"Therefore\", \"Thus\", \"Consequently\"],\n    antonyms: [\n      \"However\",\n      \"Nevertheless\",\n      \"Despite this\",\n      \"Regardless\",\n      \"Notwithstanding\",\n      \"Still\",\n    ],\n  },\n  {\n    id: 15,\n    word: \"Thus\",\n    definition:\n      \"Used to show that what you are about to mention is the result or consequence of something else that you have just mentioned\",\n    synonyms: [\"Therefore\", \"Hence\", \"Consequently\"],\n    antonyms: [\n      \"However\",\n      \"Nevertheless\",\n      \"Despite this\",\n      \"Regardless\",\n      \"Conversely\",\n      \"Instead\",\n    ],\n  },\n];\n\nconst App: React.FC = () => {\n  const [gameState, setGameState] = useState<GameState>(initialGameState);\n  const [exerciseStartTime, setExerciseStartTime] = useState<number>(0);\n  const [currentScore, setCurrentScore] = useState<number>(0);\n  const [mistakes, setMistakes] = useState<number>(0);\n  const [gameOver, setGameOver] = useState<boolean>(false);\n  const [showWordList, setShowWordList] = useState<boolean>(false);\n\n  const startExercise = (type: ExerciseType) => {\n    // Shuffle words for variety - different starting point each time\n    const shuffledWords = [...vocabularyData].sort(() => Math.random() - 0.5);\n\n    setGameState((prev) => ({\n      ...prev,\n      currentExercise: type,\n      progress: 0,\n      selectedWords:\n        type === \"memory\" ? shuffledWords.slice(0, 6) : shuffledWords,\n      matchedPairs: new Set(),\n    }));\n    setExerciseStartTime(Date.now());\n    setCurrentScore(0);\n    setMistakes(0);\n    setGameOver(false);\n  };\n\n  const goBackToMenu = () => {\n    setGameState((prev) => ({\n      ...prev,\n      currentExercise: null,\n      progress: 0,\n      selectedWords: [],\n      matchedPairs: new Set(),\n    }));\n    setExerciseStartTime(0);\n    setCurrentScore(0);\n    setCurrentTime(\"00:00\");\n    setMistakes(0);\n    setGameOver(false);\n    setShowWordList(false);\n  };\n\n  const showWordListView = () => {\n    setShowWordList(true);\n  };\n\n  const restartCurrentExercise = () => {\n    if (gameState.currentExercise) {\n      startExercise(gameState.currentExercise);\n    }\n  };\n\n  const updateStats = (isCorrect: boolean) => {\n    if (gameOver) return; // Don't update if game is over\n\n    // Handle mistake counting first, outside of setGameState\n    if (!isCorrect && gameState.currentExercise === \"definition\") {\n      setMistakes((prev) => {\n        const newMistakes = prev + 1;\n        if (newMistakes >= 4) {\n          setGameOver(true);\n        }\n        return newMistakes;\n      });\n    }\n\n    // Update game stats\n    setGameState((prev) => {\n      const newStats = { ...prev.stats };\n      newStats.totalQuestions++;\n\n      if (isCorrect) {\n        newStats.correctAnswers++;\n        newStats.currentStreak++;\n        newStats.bestStreak = Math.max(\n          newStats.bestStreak,\n          newStats.currentStreak\n        );\n        setCurrentScore((prev) => prev + 1);\n      } else {\n        newStats.currentStreak = 0;\n        // Mistake counting is now handled above, outside this callback\n      }\n\n      return {\n        ...prev,\n        stats: newStats,\n      };\n    });\n  };\n\n  // Calculate progress percentage based on exercise type\n  const getProgressPercentage = () => {\n    if (!gameState.currentExercise || gameState.selectedWords.length === 0) {\n      return \"0%\";\n    }\n\n    switch (gameState.currentExercise) {\n      case \"memory\":\n        // For memory game: matched pairs / total pairs\n        const totalPairs = gameState.selectedWords.length;\n        const matchedPairs = gameState.matchedPairs.size;\n        return `${Math.round((matchedPairs / totalPairs) * 100)}%`;\n\n      case \"synonym\":\n      case \"antonym\":\n        // For these exercises: correct answers / total words\n        const totalWords = gameState.selectedWords.length;\n        return `${Math.round((currentScore / totalWords) * 100)}%`;\n\n      case \"definition\":\n        // For definition match: use current score (which reflects actual matches)\n        return `${Math.round(\n          (currentScore / gameState.selectedWords.length) * 100\n        )}%`;\n\n      default:\n        return \"0%\";\n    }\n  };\n\n  // Add function to update progress for synonym/antonym exercises\n  const updateProgress = (currentIndex: number) => {\n    setGameState((prev) => ({\n      ...prev,\n      progress: currentIndex + 1,\n    }));\n  };\n\n  const renderExercise = () => {\n    if (gameOver) {\n      return (\n        <div className=\"game-over-container\">\n          <div className=\"game-over-animation\">\n            <h2>Game Over!</h2>\n            <p>You made 4 mistakes. Don't worry, practice makes perfect!</p>\n            <p>\n              Your score: {currentScore}/{gameState.selectedWords.length}\n            </p>\n            <div className=\"game-over-buttons\">\n              <button className=\"game-btn\" onClick={restartCurrentExercise}>\n                Try Again\n              </button>\n              <button className=\"back-btn\" onClick={goBackToMenu}>\n                Back to Menu\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    switch (gameState.currentExercise) {\n      case \"definition\":\n        return (\n          <DefinitionMatch\n            words={gameState.selectedWords}\n            onAnswer={updateStats}\n          />\n        );\n      case \"synonym\":\n        return (\n          <SynonymExercise\n            words={gameState.selectedWords}\n            onAnswer={updateStats}\n            onProgress={updateProgress}\n          />\n        );\n      case \"antonym\":\n        return (\n          <AntonymExercise\n            words={gameState.selectedWords}\n            onAnswer={updateStats}\n            onProgress={updateProgress}\n          />\n        );\n      case \"memory\":\n        return (\n          <MemoryGame words={gameState.selectedWords} onAnswer={updateStats} />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      {!gameState.currentExercise && !showWordList ? (\n        // Welcome Screen\n        <div className=\"welcome-screen\">\n          <div className=\"welcome-content\">\n            <h2>Welcome to IELTS Vocabulary Practice!</h2>\n            <p className=\"welcome-description\">\n              Master 15 essential signposting expressions for writing through 4\n              interactive exercises:\n            </p>\n            <div className=\"exercise-preview\">\n              <div\n                className=\"preview-item\"\n                onClick={() => startExercise(\"definition\")}\n              >\n                <span className=\"preview-icon\">📚</span>\n                <span>Definition Match</span>\n              </div>\n              <div\n                className=\"preview-item\"\n                onClick={() => startExercise(\"synonym\")}\n              >\n                <span className=\"preview-icon\">🔗</span>\n                <span>Synonym Exercise</span>\n              </div>\n              <div\n                className=\"preview-item\"\n                onClick={() => startExercise(\"antonym\")}\n              >\n                <span className=\"preview-icon\">⚡</span>\n                <span>Antonym Exercise</span>\n              </div>\n              <div\n                className=\"preview-item\"\n                onClick={() => startExercise(\"memory\")}\n              >\n                <span className=\"preview-icon\">🧠</span>\n                <span>Memory Game</span>\n              </div>\n            </div>\n            <div className=\"welcome-info\">\n              <p className=\"info-highlight\">\n                📚 Topic 15: Signposting expressions for writing\n              </p>\n              <div className=\"word-list-section\">\n                <div\n                  className=\"preview-item word-list-button centered\"\n                  onClick={showWordListView}\n                >\n                  <span className=\"preview-icon\">📝</span>\n                  <span>Word List</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : showWordList ? (\n        // Word List View\n        <div className=\"word-list-container\">\n          <div className=\"word-list-content\">\n            <h2>📝 Vocabulary Reference List</h2>\n            <p className=\"word-list-description\">\n              Study all 15 signposting expressions before starting the\n              exercises:\n            </p>\n            <div className=\"word-list-grid\">\n              {vocabularyData.map((word, index) => (\n                <div key={word.id} className=\"word-card\">\n                  <div className=\"word-number\">{index + 1}</div>\n                  <div className=\"word-term\">{word.word}</div>\n                  <div className=\"word-definition\">{word.definition}</div>\n                  <div className=\"word-synonyms\">\n                    <strong>Synonyms:</strong> {word.synonyms.join(\", \")}\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"word-list-actions\">\n              <button className=\"back-btn\" onClick={goBackToMenu}>\n                Back to Menu\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"exercise active\">\n          <h2 className=\"exercise-title\">\n            {gameState.currentExercise\n              ? gameState.currentExercise.charAt(0).toUpperCase() +\n                gameState.currentExercise.slice(1)\n              : \"Exercise\"}{\" \"}\n            Exercise\n          </h2>\n          <div className=\"progress-bar\">\n            <div\n              className=\"progress-fill\"\n              style={{\n                width: `${\n                  (gameState.progress / gameState.selectedWords.length) * 100\n                }%`,\n              }}\n            />\n          </div>\n          {!gameOver && gameState.currentExercise === \"definition\" && (\n            <div className=\"mistake-counter\">\n              <span className={`mistakes ${mistakes >= 3 ? \"danger\" : \"\"}`}>\n                Mistakes: {mistakes}/4\n              </span>\n            </div>\n          )}\n          {renderExercise()}\n          {!gameOver && (\n            <button className=\"back-btn\" onClick={goBackToMenu}>\n              Back to Menu\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}