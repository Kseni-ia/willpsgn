{"ast":null,"code":"var _jsxFileName = \"/Users/kseniia/Desktop/WillPsGn/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/Game.css\";\nimport DefinitionMatch from \"./components/DefinitionMatch\";\nimport SynonymExercise from \"./components/SynonymExercise\";\nimport AntonymExercise from \"./components/AntonymExercise\";\nimport MemoryGame from \"./components/MemoryGame\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialStats = {\n  correctAnswers: 0,\n  totalQuestions: 0,\n  currentStreak: 0,\n  bestStreak: 0\n};\nconst initialGameState = {\n  currentExercise: null,\n  stats: initialStats,\n  progress: 0,\n  selectedWords: [],\n  matchedPairs: new Set()\n};\n\n// IELTS Vocabulary data - Topic 15: Signposting expressions for writing\nconst vocabularyData = [{\n  id: 1,\n  word: \"Furthermore\",\n  definition: \"Used to introduce a piece of information or opinion that adds to or supports the previous one\",\n  synonyms: [\"Moreover\", \"Additionally\", \"Besides\"],\n  antonyms: [\"However\", \"Nevertheless\", \"Conversely\", \"On the contrary\", \"Instead\", \"Alternatively\"]\n}, {\n  id: 2,\n  word: \"Moreover\",\n  definition: \"Used to introduce a piece of information that adds to or supports the previous statement\",\n  synonyms: [\"Furthermore\", \"Additionally\", \"Besides\"],\n  antonyms: [\"However\", \"Nevertheless\", \"Conversely\", \"On the other hand\", \"Alternatively\", \"Instead\"]\n}, {\n  id: 3,\n  word: \"Nevertheless\",\n  definition: \"Used when saying something that contrasts with what has just been said\",\n  synonyms: [\"However\", \"Nonetheless\", \"Still\"],\n  antonyms: [\"Furthermore\", \"Moreover\", \"Additionally\", \"Similarly\", \"Likewise\", \"Therefore\"]\n}, {\n  id: 4,\n  word: \"Whereas\",\n  definition: \"Used to introduce a comment which contrasts with what is said in the main clause\",\n  synonyms: [\"While\", \"Although\", \"Though\"],\n  antonyms: [\"Similarly\", \"Likewise\", \"Equally\", \"Correspondingly\", \"In the same way\", \"Therefore\"]\n}, {\n  id: 5,\n  word: \"Whilst\",\n  definition: \"Means the same as while, used mainly in formal and literary contexts\",\n  synonyms: [\"While\", \"Although\", \"Whereas\"],\n  antonyms: [\"Similarly\", \"Likewise\", \"Therefore\", \"Consequently\", \"Hence\", \"Thus\"]\n}, {\n  id: 6,\n  word: \"Former\",\n  definition: \"When two people, things, or groups have just been mentioned, you can refer to the first of them as the former\",\n  synonyms: [\"First\", \"Previous\", \"Earlier\"],\n  antonyms: [\"Latter\", \"Last\", \"Final\", \"Second\", \"Following\", \"Subsequent\"]\n}, {\n  id: 7,\n  word: \"Initial\",\n  definition: \"Used to describe something that happens at the beginning of a process\",\n  synonyms: [\"First\", \"Opening\", \"Beginning\"],\n  antonyms: [\"Final\", \"Last\", \"Concluding\", \"Ultimate\", \"Ending\", \"Terminal\"]\n}, {\n  id: 8,\n  word: \"Latter\",\n  definition: \"When two people, things, or groups have just been mentioned, you can refer to the second of them as the latter\",\n  synonyms: [\"Second\", \"Last\", \"Final\"],\n  antonyms: [\"Former\", \"First\", \"Previous\", \"Earlier\", \"Initial\", \"Opening\"]\n}, {\n  id: 9,\n  word: \"Prior\",\n  definition: \"Used to indicate that something has already happened, or must happen, before another event takes place\",\n  synonyms: [\"Before\", \"Earlier\", \"Previous\"],\n  antonyms: [\"After\", \"Following\", \"Subsequent\", \"Later\", \"Future\", \"Next\"]\n}, {\n  id: 10,\n  word: \"Respectively\",\n  definition: \"Means in the same order as the items that you have just mentioned\",\n  synonyms: [\"Correspondingly\", \"In order\", \"Sequentially\"],\n  antonyms: [\"Randomly\", \"Haphazardly\", \"Irregularly\", \"Chaotically\", \"Unsystematically\", \"Arbitrarily\"]\n}, {\n  id: 11,\n  word: \"Subsequent\",\n  definition: \"Used to describe something that happened or existed after the time or event that has just been referred to\",\n  synonyms: [\"Following\", \"Later\", \"Next\"],\n  antonyms: [\"Prior\", \"Previous\", \"Earlier\", \"Former\", \"Preceding\", \"Initial\"]\n}, {\n  id: 12,\n  word: \"On balance\",\n  definition: \"Used to indicate that you are stating an opinion after considering all the relevant facts or arguments\",\n  synonyms: [\"Overall\", \"All things considered\", \"Generally\"],\n  antonyms: [\"Specifically\", \"Particularly\", \"Individually\", \"Separately\", \"Distinctly\", \"Precisely\"]\n}, {\n  id: 13,\n  word: \"Overall\",\n  definition: \"Used to indicate that you are talking about a situation in general or about the whole of something\",\n  synonyms: [\"Generally\", \"All in all\", \"On balance\"],\n  antonyms: [\"Specifically\", \"Particularly\", \"Individually\", \"Separately\", \"Partially\", \"Locally\"]\n}, {\n  id: 14,\n  word: \"Hence\",\n  definition: \"Used to indicate that the statement you are about to make is a consequence of what you have just said\",\n  synonyms: [\"Therefore\", \"Thus\", \"Consequently\"],\n  antonyms: [\"However\", \"Nevertheless\", \"Despite this\", \"Regardless\", \"Notwithstanding\", \"Still\"]\n}, {\n  id: 15,\n  word: \"Thus\",\n  definition: \"Used to show that what you are about to mention is the result or consequence of something else that you have just mentioned\",\n  synonyms: [\"Therefore\", \"Hence\", \"Consequently\"],\n  antonyms: [\"However\", \"Nevertheless\", \"Despite this\", \"Regardless\", \"Conversely\", \"Instead\"]\n}];\nconst App = () => {\n  _s();\n  const [gameState, setGameState] = useState(initialGameState);\n  const [exerciseStartTime, setExerciseStartTime] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [currentTime, setCurrentTime] = useState(\"00:00\");\n  const [mistakes, setMistakes] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [showWordList, setShowWordList] = useState(false);\n\n  // Timer effect to update time every second\n  useEffect(() => {\n    let interval;\n    if (gameState.currentExercise && exerciseStartTime && !gameOver) {\n      interval = setInterval(() => {\n        const elapsed = Math.floor((Date.now() - exerciseStartTime) / 1000);\n        const minutes = Math.floor(elapsed / 60);\n        const seconds = elapsed % 60;\n        setCurrentTime(`${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`);\n      }, 1000);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [gameState.currentExercise, exerciseStartTime, gameOver]);\n  const startExercise = type => {\n    // Shuffle words for variety - different starting point each time\n    const shuffledWords = [...vocabularyData].sort(() => Math.random() - 0.5);\n    setGameState(prev => ({\n      ...prev,\n      currentExercise: type,\n      progress: 0,\n      selectedWords: type === \"memory\" ? shuffledWords.slice(0, 6) : shuffledWords,\n      matchedPairs: new Set()\n    }));\n    setExerciseStartTime(Date.now());\n    setCurrentScore(0);\n    setCurrentTime(\"00:00\");\n    setMistakes(0);\n    setGameOver(false);\n  };\n  const goBackToMenu = () => {\n    setGameState(prev => ({\n      ...prev,\n      currentExercise: null,\n      progress: 0,\n      selectedWords: [],\n      matchedPairs: new Set()\n    }));\n    setExerciseStartTime(0);\n    setCurrentScore(0);\n    setCurrentTime(\"00:00\");\n    setMistakes(0);\n    setGameOver(false);\n  };\n  const restartCurrentExercise = () => {\n    if (gameState.currentExercise) {\n      startExercise(gameState.currentExercise);\n    }\n  };\n  const updateStats = isCorrect => {\n    if (gameOver) return; // Don't update if game is over\n\n    // Handle mistake counting first, outside of setGameState\n    if (!isCorrect && gameState.currentExercise === \"definition\") {\n      setMistakes(prev => {\n        const newMistakes = prev + 1;\n        if (newMistakes >= 4) {\n          setGameOver(true);\n        }\n        return newMistakes;\n      });\n    }\n\n    // Update game stats\n    setGameState(prev => {\n      const newStats = {\n        ...prev.stats\n      };\n      newStats.totalQuestions++;\n      if (isCorrect) {\n        newStats.correctAnswers++;\n        newStats.currentStreak++;\n        newStats.bestStreak = Math.max(newStats.bestStreak, newStats.currentStreak);\n        setCurrentScore(prev => prev + 1);\n      } else {\n        newStats.currentStreak = 0;\n        // Mistake counting is now handled above, outside this callback\n      }\n      return {\n        ...prev,\n        stats: newStats\n      };\n    });\n  };\n\n  // Calculate progress percentage based on exercise type\n  const getProgressPercentage = () => {\n    if (!gameState.currentExercise || gameState.selectedWords.length === 0) {\n      return \"0%\";\n    }\n    switch (gameState.currentExercise) {\n      case \"memory\":\n        // For memory game: matched pairs / total pairs\n        const totalPairs = gameState.selectedWords.length;\n        const matchedPairs = gameState.matchedPairs.size;\n        return `${Math.round(matchedPairs / totalPairs * 100)}%`;\n      case \"synonym\":\n      case \"antonym\":\n        // For these exercises: correct answers / total words\n        const totalWords = gameState.selectedWords.length;\n        return `${Math.round(currentScore / totalWords * 100)}%`;\n      case \"definition\":\n        // For definition match: use current score (which reflects actual matches)\n        return `${Math.round(currentScore / gameState.selectedWords.length * 100)}%`;\n      default:\n        return \"0%\";\n    }\n  };\n\n  // Add function to update progress for synonym/antonym exercises\n  const updateProgress = currentIndex => {\n    setGameState(prev => ({\n      ...prev,\n      progress: currentIndex + 1\n    }));\n  };\n  const renderExercise = () => {\n    if (gameOver) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-over-animation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Game Over!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You made 4 mistakes. Don't worry, practice makes perfect!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your score: \", currentScore, \"/\", gameState.selectedWords.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-over-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"game-btn\",\n              onClick: restartCurrentExercise,\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back-btn\",\n              onClick: goBackToMenu,\n              children: \"Back to Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this);\n    }\n    switch (gameState.currentExercise) {\n      case \"definition\":\n        return /*#__PURE__*/_jsxDEV(DefinitionMatch, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this);\n      case \"synonym\":\n        return /*#__PURE__*/_jsxDEV(SynonymExercise, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats,\n          onProgress: updateProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this);\n      case \"antonym\":\n        return /*#__PURE__*/_jsxDEV(AntonymExercise, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats,\n          onProgress: updateProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this);\n      case \"memory\":\n        return /*#__PURE__*/_jsxDEV(MemoryGame, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Vocabulary Master Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: !gameState.currentExercise ?\n        /*#__PURE__*/\n        // Welcome screen - show welcome info\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: \"Welcome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"IELTS Practice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: \"15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Vocabulary Words\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: \"Ready?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Let's Begin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // During exercise - show scores and timer\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: currentScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: currentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: getProgressPercentage()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), !gameState.currentExercise ?\n    /*#__PURE__*/\n    // Welcome Screen\n    _jsxDEV(\"div\", {\n      className: \"welcome-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to IELTS Vocabulary Practice!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"welcome-description\",\n          children: \"Master 15 essential signposting expressions for writing through 4 interactive exercises:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exercise-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-item\",\n            onClick: () => startExercise(\"definition\"),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"preview-icon\",\n              children: \"\\uD83D\\uDCDA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Definition Match\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-item\",\n            onClick: () => startExercise(\"synonym\"),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"preview-icon\",\n              children: \"\\uD83D\\uDD17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Synonym Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-item\",\n            onClick: () => startExercise(\"antonym\"),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"preview-icon\",\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Antonym Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-item\",\n            onClick: () => startExercise(\"memory\"),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"preview-icon\",\n              children: \"\\uD83E\\uDDE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Memory Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info-highlight\",\n            children: \"\\uD83D\\uDCDA Topic 15: Signposting expressions for writing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise active\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"exercise-title\",\n        children: [gameState.currentExercise.charAt(0).toUpperCase() + gameState.currentExercise.slice(1), \" \", \"Exercise\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${gameState.progress / gameState.selectedWords.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this), !gameOver && gameState.currentExercise === \"definition\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistake-counter\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `mistakes ${mistakes >= 3 ? \"danger\" : \"\"}`,\n          children: [\"Mistakes: \", mistakes, \"/4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 13\n      }, this), renderExercise(), !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: goBackToMenu,\n        children: \"Back to Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9b3eSeDjZjqMQQQA4of/ten2kWM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DefinitionMatch","SynonymExercise","AntonymExercise","MemoryGame","jsxDEV","_jsxDEV","Fragment","_Fragment","initialStats","correctAnswers","totalQuestions","currentStreak","bestStreak","initialGameState","currentExercise","stats","progress","selectedWords","matchedPairs","Set","vocabularyData","id","word","definition","synonyms","antonyms","App","_s","gameState","setGameState","exerciseStartTime","setExerciseStartTime","currentScore","setCurrentScore","currentTime","setCurrentTime","mistakes","setMistakes","gameOver","setGameOver","showWordList","setShowWordList","interval","setInterval","elapsed","Math","floor","Date","now","minutes","seconds","toString","padStart","clearInterval","startExercise","type","shuffledWords","sort","random","prev","slice","goBackToMenu","restartCurrentExercise","updateStats","isCorrect","newMistakes","newStats","max","getProgressPercentage","length","totalPairs","size","round","totalWords","updateProgress","currentIndex","renderExercise","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","words","onAnswer","onProgress","charAt","toUpperCase","style","width","_c","$RefreshReg$"],"sources":["/Users/kseniia/Desktop/WillPsGn/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles/Game.css\";\nimport { GameState, Word, GameStats, ExerciseType } from \"./types/game\";\nimport DefinitionMatch from \"./components/DefinitionMatch\";\nimport SynonymExercise from \"./components/SynonymExercise\";\nimport AntonymExercise from \"./components/AntonymExercise\";\nimport MemoryGame from \"./components/MemoryGame\";\n\nconst initialStats: GameStats = {\n  correctAnswers: 0,\n  totalQuestions: 0,\n  currentStreak: 0,\n  bestStreak: 0,\n};\n\nconst initialGameState: GameState = {\n  currentExercise: null,\n  stats: initialStats,\n  progress: 0,\n  selectedWords: [],\n  matchedPairs: new Set(),\n};\n\n// IELTS Vocabulary data - Topic 15: Signposting expressions for writing\nconst vocabularyData: Word[] = [\n  {\n    id: 1,\n    word: \"Furthermore\",\n    definition:\n      \"Used to introduce a piece of information or opinion that adds to or supports the previous one\",\n    synonyms: [\"Moreover\", \"Additionally\", \"Besides\"],\n    antonyms: [\n      \"However\",\n      \"Nevertheless\",\n      \"Conversely\",\n      \"On the contrary\",\n      \"Instead\",\n      \"Alternatively\",\n    ],\n  },\n  {\n    id: 2,\n    word: \"Moreover\",\n    definition:\n      \"Used to introduce a piece of information that adds to or supports the previous statement\",\n    synonyms: [\"Furthermore\", \"Additionally\", \"Besides\"],\n    antonyms: [\n      \"However\",\n      \"Nevertheless\",\n      \"Conversely\",\n      \"On the other hand\",\n      \"Alternatively\",\n      \"Instead\",\n    ],\n  },\n  {\n    id: 3,\n    word: \"Nevertheless\",\n    definition:\n      \"Used when saying something that contrasts with what has just been said\",\n    synonyms: [\"However\", \"Nonetheless\", \"Still\"],\n    antonyms: [\n      \"Furthermore\",\n      \"Moreover\",\n      \"Additionally\",\n      \"Similarly\",\n      \"Likewise\",\n      \"Therefore\",\n    ],\n  },\n  {\n    id: 4,\n    word: \"Whereas\",\n    definition:\n      \"Used to introduce a comment which contrasts with what is said in the main clause\",\n    synonyms: [\"While\", \"Although\", \"Though\"],\n    antonyms: [\n      \"Similarly\",\n      \"Likewise\",\n      \"Equally\",\n      \"Correspondingly\",\n      \"In the same way\",\n      \"Therefore\",\n    ],\n  },\n  {\n    id: 5,\n    word: \"Whilst\",\n    definition:\n      \"Means the same as while, used mainly in formal and literary contexts\",\n    synonyms: [\"While\", \"Although\", \"Whereas\"],\n    antonyms: [\n      \"Similarly\",\n      \"Likewise\",\n      \"Therefore\",\n      \"Consequently\",\n      \"Hence\",\n      \"Thus\",\n    ],\n  },\n  {\n    id: 6,\n    word: \"Former\",\n    definition:\n      \"When two people, things, or groups have just been mentioned, you can refer to the first of them as the former\",\n    synonyms: [\"First\", \"Previous\", \"Earlier\"],\n    antonyms: [\"Latter\", \"Last\", \"Final\", \"Second\", \"Following\", \"Subsequent\"],\n  },\n  {\n    id: 7,\n    word: \"Initial\",\n    definition:\n      \"Used to describe something that happens at the beginning of a process\",\n    synonyms: [\"First\", \"Opening\", \"Beginning\"],\n    antonyms: [\"Final\", \"Last\", \"Concluding\", \"Ultimate\", \"Ending\", \"Terminal\"],\n  },\n  {\n    id: 8,\n    word: \"Latter\",\n    definition:\n      \"When two people, things, or groups have just been mentioned, you can refer to the second of them as the latter\",\n    synonyms: [\"Second\", \"Last\", \"Final\"],\n    antonyms: [\"Former\", \"First\", \"Previous\", \"Earlier\", \"Initial\", \"Opening\"],\n  },\n  {\n    id: 9,\n    word: \"Prior\",\n    definition:\n      \"Used to indicate that something has already happened, or must happen, before another event takes place\",\n    synonyms: [\"Before\", \"Earlier\", \"Previous\"],\n    antonyms: [\"After\", \"Following\", \"Subsequent\", \"Later\", \"Future\", \"Next\"],\n  },\n  {\n    id: 10,\n    word: \"Respectively\",\n    definition:\n      \"Means in the same order as the items that you have just mentioned\",\n    synonyms: [\"Correspondingly\", \"In order\", \"Sequentially\"],\n    antonyms: [\n      \"Randomly\",\n      \"Haphazardly\",\n      \"Irregularly\",\n      \"Chaotically\",\n      \"Unsystematically\",\n      \"Arbitrarily\",\n    ],\n  },\n  {\n    id: 11,\n    word: \"Subsequent\",\n    definition:\n      \"Used to describe something that happened or existed after the time or event that has just been referred to\",\n    synonyms: [\"Following\", \"Later\", \"Next\"],\n    antonyms: [\n      \"Prior\",\n      \"Previous\",\n      \"Earlier\",\n      \"Former\",\n      \"Preceding\",\n      \"Initial\",\n    ],\n  },\n  {\n    id: 12,\n    word: \"On balance\",\n    definition:\n      \"Used to indicate that you are stating an opinion after considering all the relevant facts or arguments\",\n    synonyms: [\"Overall\", \"All things considered\", \"Generally\"],\n    antonyms: [\n      \"Specifically\",\n      \"Particularly\",\n      \"Individually\",\n      \"Separately\",\n      \"Distinctly\",\n      \"Precisely\",\n    ],\n  },\n  {\n    id: 13,\n    word: \"Overall\",\n    definition:\n      \"Used to indicate that you are talking about a situation in general or about the whole of something\",\n    synonyms: [\"Generally\", \"All in all\", \"On balance\"],\n    antonyms: [\n      \"Specifically\",\n      \"Particularly\",\n      \"Individually\",\n      \"Separately\",\n      \"Partially\",\n      \"Locally\",\n    ],\n  },\n  {\n    id: 14,\n    word: \"Hence\",\n    definition:\n      \"Used to indicate that the statement you are about to make is a consequence of what you have just said\",\n    synonyms: [\"Therefore\", \"Thus\", \"Consequently\"],\n    antonyms: [\n      \"However\",\n      \"Nevertheless\",\n      \"Despite this\",\n      \"Regardless\",\n      \"Notwithstanding\",\n      \"Still\",\n    ],\n  },\n  {\n    id: 15,\n    word: \"Thus\",\n    definition:\n      \"Used to show that what you are about to mention is the result or consequence of something else that you have just mentioned\",\n    synonyms: [\"Therefore\", \"Hence\", \"Consequently\"],\n    antonyms: [\n      \"However\",\n      \"Nevertheless\",\n      \"Despite this\",\n      \"Regardless\",\n      \"Conversely\",\n      \"Instead\",\n    ],\n  },\n];\n\nconst App: React.FC = () => {\n  const [gameState, setGameState] = useState<GameState>(initialGameState);\n  const [exerciseStartTime, setExerciseStartTime] = useState<number>(0);\n  const [currentScore, setCurrentScore] = useState<number>(0);\n  const [currentTime, setCurrentTime] = useState<string>(\"00:00\");\n  const [mistakes, setMistakes] = useState<number>(0);\n  const [gameOver, setGameOver] = useState<boolean>(false);\n  const [showWordList, setShowWordList] = useState<boolean>(false);\n\n  // Timer effect to update time every second\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    if (gameState.currentExercise && exerciseStartTime && !gameOver) {\n      interval = setInterval(() => {\n        const elapsed = Math.floor((Date.now() - exerciseStartTime) / 1000);\n        const minutes = Math.floor(elapsed / 60);\n        const seconds = elapsed % 60;\n        setCurrentTime(\n          `${minutes.toString().padStart(2, \"0\")}:${seconds\n            .toString()\n            .padStart(2, \"0\")}`\n        );\n      }, 1000);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [gameState.currentExercise, exerciseStartTime, gameOver]);\n\n  const startExercise = (type: ExerciseType) => {\n    // Shuffle words for variety - different starting point each time\n    const shuffledWords = [...vocabularyData].sort(() => Math.random() - 0.5);\n\n    setGameState((prev) => ({\n      ...prev,\n      currentExercise: type,\n      progress: 0,\n      selectedWords:\n        type === \"memory\" ? shuffledWords.slice(0, 6) : shuffledWords,\n      matchedPairs: new Set(),\n    }));\n    setExerciseStartTime(Date.now());\n    setCurrentScore(0);\n    setCurrentTime(\"00:00\");\n    setMistakes(0);\n    setGameOver(false);\n  };\n\n  const goBackToMenu = () => {\n    setGameState((prev) => ({\n      ...prev,\n      currentExercise: null,\n      progress: 0,\n      selectedWords: [],\n      matchedPairs: new Set(),\n    }));\n    setExerciseStartTime(0);\n    setCurrentScore(0);\n    setCurrentTime(\"00:00\");\n    setMistakes(0);\n    setGameOver(false);\n  };\n\n  const restartCurrentExercise = () => {\n    if (gameState.currentExercise) {\n      startExercise(gameState.currentExercise);\n    }\n  };\n\n  const updateStats = (isCorrect: boolean) => {\n    if (gameOver) return; // Don't update if game is over\n\n    // Handle mistake counting first, outside of setGameState\n    if (!isCorrect && gameState.currentExercise === \"definition\") {\n      setMistakes((prev) => {\n        const newMistakes = prev + 1;\n        if (newMistakes >= 4) {\n          setGameOver(true);\n        }\n        return newMistakes;\n      });\n    }\n\n    // Update game stats\n    setGameState((prev) => {\n      const newStats = { ...prev.stats };\n      newStats.totalQuestions++;\n\n      if (isCorrect) {\n        newStats.correctAnswers++;\n        newStats.currentStreak++;\n        newStats.bestStreak = Math.max(\n          newStats.bestStreak,\n          newStats.currentStreak\n        );\n        setCurrentScore((prev) => prev + 1);\n      } else {\n        newStats.currentStreak = 0;\n        // Mistake counting is now handled above, outside this callback\n      }\n\n      return {\n        ...prev,\n        stats: newStats,\n      };\n    });\n  };\n\n  // Calculate progress percentage based on exercise type\n  const getProgressPercentage = () => {\n    if (!gameState.currentExercise || gameState.selectedWords.length === 0) {\n      return \"0%\";\n    }\n\n    switch (gameState.currentExercise) {\n      case \"memory\":\n        // For memory game: matched pairs / total pairs\n        const totalPairs = gameState.selectedWords.length;\n        const matchedPairs = gameState.matchedPairs.size;\n        return `${Math.round((matchedPairs / totalPairs) * 100)}%`;\n\n      case \"synonym\":\n      case \"antonym\":\n        // For these exercises: correct answers / total words\n        const totalWords = gameState.selectedWords.length;\n        return `${Math.round((currentScore / totalWords) * 100)}%`;\n\n      case \"definition\":\n        // For definition match: use current score (which reflects actual matches)\n        return `${Math.round(\n          (currentScore / gameState.selectedWords.length) * 100\n        )}%`;\n\n      default:\n        return \"0%\";\n    }\n  };\n\n  // Add function to update progress for synonym/antonym exercises\n  const updateProgress = (currentIndex: number) => {\n    setGameState((prev) => ({\n      ...prev,\n      progress: currentIndex + 1,\n    }));\n  };\n\n  const renderExercise = () => {\n    if (gameOver) {\n      return (\n        <div className=\"game-over-container\">\n          <div className=\"game-over-animation\">\n            <h2>Game Over!</h2>\n            <p>You made 4 mistakes. Don't worry, practice makes perfect!</p>\n            <p>\n              Your score: {currentScore}/{gameState.selectedWords.length}\n            </p>\n            <div className=\"game-over-buttons\">\n              <button className=\"game-btn\" onClick={restartCurrentExercise}>\n                Try Again\n              </button>\n              <button className=\"back-btn\" onClick={goBackToMenu}>\n                Back to Menu\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    switch (gameState.currentExercise) {\n      case \"definition\":\n        return (\n          <DefinitionMatch\n            words={gameState.selectedWords}\n            onAnswer={updateStats}\n          />\n        );\n      case \"synonym\":\n        return (\n          <SynonymExercise\n            words={gameState.selectedWords}\n            onAnswer={updateStats}\n            onProgress={updateProgress}\n          />\n        );\n      case \"antonym\":\n        return (\n          <AntonymExercise\n            words={gameState.selectedWords}\n            onAnswer={updateStats}\n            onProgress={updateProgress}\n          />\n        );\n      case \"memory\":\n        return (\n          <MemoryGame words={gameState.selectedWords} onAnswer={updateStats} />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"header\">\n        <h1 className=\"title\">Vocabulary Master Game</h1>\n        <div className=\"stats\">\n          {!gameState.currentExercise ? (\n            // Welcome screen - show welcome info\n            <>\n              <div className=\"stat\">\n                <div className=\"stat-value\">Welcome</div>\n                <div className=\"stat-label\">IELTS Practice</div>\n              </div>\n              <div className=\"stat\">\n                <div className=\"stat-value\">15</div>\n                <div className=\"stat-label\">Vocabulary Words</div>\n              </div>\n              <div className=\"stat\">\n                <div className=\"stat-value\">Ready?</div>\n                <div className=\"stat-label\">Let's Begin</div>\n              </div>\n            </>\n          ) : (\n            // During exercise - show scores and timer\n            <>\n              <div className=\"stat\">\n                <div className=\"stat-value\">{currentScore}</div>\n                <div className=\"stat-label\">Score</div>\n              </div>\n              <div className=\"stat\">\n                <div className=\"stat-value\">{currentTime}</div>\n                <div className=\"stat-label\">Time</div>\n              </div>\n              <div className=\"stat\">\n                <div className=\"stat-value\">{getProgressPercentage()}</div>\n                <div className=\"stat-label\">Progress</div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      {!gameState.currentExercise ? (\n        // Welcome Screen\n        <div className=\"welcome-screen\">\n          <div className=\"welcome-content\">\n            <h2>Welcome to IELTS Vocabulary Practice!</h2>\n            <p className=\"welcome-description\">\n              Master 15 essential signposting expressions for writing through 4\n              interactive exercises:\n            </p>\n            <div className=\"exercise-preview\">\n              <div\n                className=\"preview-item\"\n                onClick={() => startExercise(\"definition\")}\n              >\n                <span className=\"preview-icon\">📚</span>\n                <span>Definition Match</span>\n              </div>\n              <div\n                className=\"preview-item\"\n                onClick={() => startExercise(\"synonym\")}\n              >\n                <span className=\"preview-icon\">🔗</span>\n                <span>Synonym Exercise</span>\n              </div>\n              <div\n                className=\"preview-item\"\n                onClick={() => startExercise(\"antonym\")}\n              >\n                <span className=\"preview-icon\">⚡</span>\n                <span>Antonym Exercise</span>\n              </div>\n              <div\n                className=\"preview-item\"\n                onClick={() => startExercise(\"memory\")}\n              >\n                <span className=\"preview-icon\">🧠</span>\n                <span>Memory Game</span>\n              </div>\n            </div>\n            <div className=\"welcome-info\">\n              <p className=\"info-highlight\">\n                📚 Topic 15: Signposting expressions for writing\n              </p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"exercise active\">\n          <h2 className=\"exercise-title\">\n            {gameState.currentExercise.charAt(0).toUpperCase() +\n              gameState.currentExercise.slice(1)}{\" \"}\n            Exercise\n          </h2>\n          <div className=\"progress-bar\">\n            <div\n              className=\"progress-fill\"\n              style={{\n                width: `${\n                  (gameState.progress / gameState.selectedWords.length) * 100\n                }%`,\n              }}\n            />\n          </div>\n          {!gameOver && gameState.currentExercise === \"definition\" && (\n            <div className=\"mistake-counter\">\n              <span className={`mistakes ${mistakes >= 3 ? \"danger\" : \"\"}`}>\n                Mistakes: {mistakes}/4\n              </span>\n            </div>\n          )}\n          {renderExercise()}\n          {!gameOver && (\n            <button className=\"back-btn\" onClick={goBackToMenu}>\n              Back to Menu\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}