{"ast":null,"code":"var _jsxFileName = \"/Users/kseniia/Desktop/WillPsGn/src/components/AntonymExercise.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AntonymExercise = ({\n  words,\n  onAnswer\n}) => {\n  _s();\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [userInput, setUserInput] = useState(\"\");\n  const [feedback, setFeedback] = useState(null);\n  const currentWord = words[currentWordIndex];\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isCorrect = currentWord.antonyms.some(antonym => antonym.toLowerCase() === userInput.toLowerCase());\n    setFeedback(isCorrect ? \"correct\" : \"incorrect\");\n    onAnswer(isCorrect);\n\n    // Move to next word after a short delay\n    setTimeout(() => {\n      if (currentWordIndex < words.length - 1) {\n        setCurrentWordIndex(prev => prev + 1);\n        setUserInput(\"\");\n        setFeedback(null);\n      }\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"syn-ant-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"word-label\",\n        children: \"Word:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"word-value\",\n        children: currentWord.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"word-label\",\n          children: \"Antonym:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: `input-field ${feedback || \"\"}`,\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          placeholder: \"Enter an antonym...\",\n          disabled: feedback !== null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"game-btn\",\n        disabled: !userInput.trim() || feedback !== null,\n        children: \"Check Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `feedback ${feedback}`,\n      children: [feedback === \"correct\" ? \"Correct!\" : \"Try again!\", feedback === \"incorrect\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hint\",\n        children: [\"Hint: One of the antonyms is: \", currentWord.antonyms[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AntonymExercise, \"Cb2nDOAKx2w+Z5FR1zCN9H0aefM=\");\n_c = AntonymExercise;\nexport default AntonymExercise;\nvar _c;\n$RefreshReg$(_c, \"AntonymExercise\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AntonymExercise","words","onAnswer","_s","currentWordIndex","setCurrentWordIndex","userInput","setUserInput","feedback","setFeedback","currentWord","handleSubmit","e","preventDefault","isCorrect","antonyms","some","antonym","toLowerCase","setTimeout","length","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","word","onSubmit","type","value","onChange","target","placeholder","disabled","trim","_c","$RefreshReg$"],"sources":["/Users/kseniia/Desktop/WillPsGn/src/components/AntonymExercise.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Word } from \"../types/game\";\n\ninterface AntonymExerciseProps {\n  words: Word[];\n  onAnswer: (isCorrect: boolean) => void;\n}\n\nconst AntonymExercise: React.FC<AntonymExerciseProps> = ({\n  words,\n  onAnswer,\n}) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [userInput, setUserInput] = useState(\"\");\n  const [feedback, setFeedback] = useState<\"correct\" | \"incorrect\" | null>(\n    null\n  );\n\n  const currentWord = words[currentWordIndex];\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const isCorrect = currentWord.antonyms.some(\n      (antonym) => antonym.toLowerCase() === userInput.toLowerCase()\n    );\n\n    setFeedback(isCorrect ? \"correct\" : \"incorrect\");\n    onAnswer(isCorrect);\n\n    // Move to next word after a short delay\n    setTimeout(() => {\n      if (currentWordIndex < words.length - 1) {\n        setCurrentWordIndex((prev) => prev + 1);\n        setUserInput(\"\");\n        setFeedback(null);\n      }\n    }, 1500);\n  };\n\n  return (\n    <div className=\"syn-ant-container\">\n      <div className=\"word-row\">\n        <span className=\"word-label\">Word:</span>\n        <span className=\"word-value\">{currentWord.word}</span>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"word-row\">\n          <span className=\"word-label\">Antonym:</span>\n          <input\n            type=\"text\"\n            className={`input-field ${feedback || \"\"}`}\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            placeholder=\"Enter an antonym...\"\n            disabled={feedback !== null}\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"game-btn\"\n          disabled={!userInput.trim() || feedback !== null}\n        >\n          Check Answer\n        </button>\n      </form>\n\n      {feedback && (\n        <div className={`feedback ${feedback}`}>\n          {feedback === \"correct\" ? \"Correct!\" : \"Try again!\"}\n          {feedback === \"incorrect\" && (\n            <div className=\"hint\">\n              Hint: One of the antonyms is: {currentWord.antonyms[0]}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AntonymExercise;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}