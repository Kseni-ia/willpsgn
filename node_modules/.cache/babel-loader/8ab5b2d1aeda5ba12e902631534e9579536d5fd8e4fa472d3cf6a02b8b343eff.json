{"ast":null,"code":"var _jsxFileName = \"/Users/kseniia/Desktop/WillPsGn/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/Game.css\";\nimport DefinitionMatch from \"./components/DefinitionMatch\";\nimport SynonymExercise from \"./components/SynonymExercise\";\nimport AntonymExercise from \"./components/AntonymExercise\";\nimport MemoryGame from \"./components/MemoryGame\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialStats = {\n  correctAnswers: 0,\n  totalQuestions: 0,\n  currentStreak: 0,\n  bestStreak: 0\n};\nconst initialGameState = {\n  currentExercise: null,\n  stats: initialStats,\n  progress: 0,\n  selectedWords: [],\n  matchedPairs: new Set()\n};\n\n// IELTS Vocabulary data from the screenshot\nconst vocabularyData = [{\n  id: 1,\n  word: \"Chain reaction\",\n  definition: \"A series of events, each of which causes the next\",\n  synonyms: [\"Sequence\", \"Series\", \"Cascade\"],\n  antonyms: [\"Isolation\", \"Single event\", \"Independence\", \"Separation\", \"Individual action\", \"Standalone\", \"Unconnected\"]\n}, {\n  id: 2,\n  word: \"Consequence\",\n  definition: \"The results or effects of something\",\n  synonyms: [\"Result\", \"Effect\", \"Outcome\"],\n  antonyms: [\"Cause\", \"Origin\", \"Source\", \"Beginning\", \"Start\", \"Root\", \"Trigger\", \"Reason\"]\n}, {\n  id: 3,\n  word: \"Impact\",\n  definition: \"A sudden and powerful effect on a situation, process, or person\",\n  synonyms: [\"Effect\", \"Influence\", \"Force\"],\n  antonyms: [\"Weakness\", \"Insignificance\", \"Neglect\", \"Powerlessness\", \"Ineffectiveness\", \"Gentleness\", \"Softness\"]\n}, {\n  id: 4,\n  word: \"Influence\",\n  definition: \"To affect what people do or what happens in situations\",\n  synonyms: [\"Affect\", \"Sway\", \"Impact\"],\n  antonyms: [\"Independence\", \"Autonomy\", \"Resistance\", \"Immunity\", \"Freedom\", \"Self-reliance\"]\n}, {\n  id: 5,\n  word: \"Outcome\",\n  definition: \"The situation that exists at the end of an activity or process\",\n  synonyms: [\"Result\", \"End\", \"Conclusion\"],\n  antonyms: [\"Beginning\", \"Start\", \"Cause\", \"Origin\", \"Input\", \"Commencement\", \"Introduction\"]\n}, {\n  id: 6,\n  word: \"Repercussion\",\n  definition: \"Unpleasant things that happen as a result of an action or event\",\n  synonyms: [\"Consequence\", \"Aftermath\", \"Backlash\"],\n  antonyms: [\"Benefit\", \"Advantage\", \"Reward\", \"Blessing\", \"Positive outcome\", \"Good result\", \"Bonus\"]\n}, {\n  id: 7,\n  word: \"Affect\",\n  definition: \"To influence or cause someone or something to change\",\n  synonyms: [\"Influence\", \"Impact\", \"Alter\"],\n  antonyms: [\"Ignore\", \"Preserve\", \"Maintain\", \"Leave alone\", \"Keep unchanged\", \"Neglect\", \"Disregard\"]\n}, {\n  id: 8,\n  word: \"Contribute\",\n  definition: \"To be one of the causes of an event or situation\",\n  synonyms: [\"Add\", \"Help\", \"Assist\"],\n  antonyms: [\"Hinder\", \"Prevent\", \"Block\", \"Obstruct\", \"Impede\", \"Subtract\", \"Remove\", \"Withdraw\"]\n}, {\n  id: 9,\n  word: \"Determine\",\n  definition: \"To cause something to be of a particular kind or nature\",\n  synonyms: [\"Decide\", \"Establish\", \"Fix\"],\n  antonyms: [\"Ignore\", \"Neglect\", \"Randomize\", \"Confuse\", \"Uncertain\", \"Undecided\", \"Flexible\"]\n}, {\n  id: 10,\n  word: \"Generate\",\n  definition: \"To cause something to begin and develop\",\n  synonyms: [\"Create\", \"Produce\", \"Cause\"],\n  antonyms: [\"Destroy\", \"Stop\", \"End\", \"Eliminate\", \"Remove\", \"Prevent\", \"Block\", \"Terminate\"]\n}, {\n  id: 11,\n  word: \"Induce\",\n  definition: \"To cause a state or condition\",\n  synonyms: [\"Cause\", \"Bring about\", \"Lead to\"],\n  antonyms: [\"Prevent\", \"Stop\", \"Block\", \"Discourage\", \"Deter\", \"Inhibit\", \"Suppress\"]\n}, {\n  id: 12,\n  word: \"Provoke\",\n  definition: \"To cause a reaction or response\",\n  synonyms: [\"Trigger\", \"Cause\", \"Arouse\"],\n  antonyms: [\"Calm\", \"Soothe\", \"Prevent\", \"Pacify\", \"Appease\", \"Comfort\", \"Relax\"]\n}, {\n  id: 13,\n  word: \"Result\",\n  definition: \"To cause a particular situation or event to happen\",\n  synonyms: [\"Lead to\", \"Cause\", \"End in\"],\n  antonyms: [\"Cause\", \"Beginning\", \"Start\", \"Origin\", \"Unfinished\", \"Incomplete\", \"Ongoing\", \"Process\", \"Input\"]\n}, {\n  id: 14,\n  word: \"Stem\",\n  definition: \"To originate or be caused by something\",\n  synonyms: [\"Arise\", \"Originate\", \"Spring\"],\n  antonyms: [\"End\", \"Finish\", \"Conclude\", \"Terminate\", \"Result\", \"Lead to\", \"Cause\"]\n}, {\n  id: 15,\n  word: \"Trigger\",\n  definition: \"To cause an event or situation to begin\",\n  synonyms: [\"Cause\", \"Start\", \"Activate\"],\n  antonyms: [\"Stop\", \"Prevent\", \"End\", \"Finish\", \"Halt\", \"Block\", \"Inhibit\"]\n}];\nconst App = () => {\n  _s();\n  const [gameState, setGameState] = useState(initialGameState);\n  const [exerciseStartTime, setExerciseStartTime] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [currentTime, setCurrentTime] = useState(\"00:00\");\n  const [mistakes, setMistakes] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  // Timer effect to update time every second\n  useEffect(() => {\n    let interval;\n    if (gameState.currentExercise && exerciseStartTime && !gameOver) {\n      interval = setInterval(() => {\n        const elapsed = Math.floor((Date.now() - exerciseStartTime) / 1000);\n        const minutes = Math.floor(elapsed / 60);\n        const seconds = elapsed % 60;\n        setCurrentTime(`${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`);\n      }, 1000);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [gameState.currentExercise, exerciseStartTime, gameOver]);\n  const startExercise = type => {\n    setGameState(prev => ({\n      ...prev,\n      currentExercise: type,\n      progress: 0,\n      selectedWords: type === \"memory\" ? vocabularyData.slice(0, 6) : vocabularyData,\n      matchedPairs: new Set()\n    }));\n    setExerciseStartTime(Date.now());\n    setCurrentScore(0);\n    setCurrentTime(\"00:00\");\n    setMistakes(0);\n    setGameOver(false);\n  };\n  const goBackToMenu = () => {\n    setGameState(prev => ({\n      ...prev,\n      currentExercise: null,\n      progress: 0,\n      selectedWords: [],\n      matchedPairs: new Set()\n    }));\n    setExerciseStartTime(0);\n    setCurrentScore(0);\n    setCurrentTime(\"00:00\");\n    setMistakes(0);\n    setGameOver(false);\n  };\n  const restartCurrentExercise = () => {\n    if (gameState.currentExercise) {\n      startExercise(gameState.currentExercise);\n    }\n  };\n  const updateStats = isCorrect => {\n    if (gameOver) return; // Don't update if game is over\n\n    setGameState(prev => {\n      const newStats = {\n        ...prev.stats\n      };\n      newStats.totalQuestions++;\n      if (isCorrect) {\n        newStats.correctAnswers++;\n        newStats.currentStreak++;\n        newStats.bestStreak = Math.max(newStats.bestStreak, newStats.currentStreak);\n        setCurrentScore(prev => prev + 1);\n      } else {\n        newStats.currentStreak = 0;\n\n        // Only count mistakes for Definition Match exercise\n        if (gameState.currentExercise === \"definition\") {\n          setMistakes(prev => {\n            const newMistakes = prev + 1;\n            if (newMistakes >= 4) {\n              setGameOver(true);\n            }\n            return newMistakes;\n          });\n        }\n      }\n      return {\n        ...prev,\n        stats: newStats\n      };\n    });\n  };\n\n  // Calculate progress percentage based on exercise type\n  const getProgressPercentage = () => {\n    if (!gameState.currentExercise || gameState.selectedWords.length === 0) {\n      return \"0%\";\n    }\n    switch (gameState.currentExercise) {\n      case \"memory\":\n        // For memory game: matched pairs / total pairs\n        const totalPairs = gameState.selectedWords.length;\n        const matchedPairs = gameState.matchedPairs.size;\n        return `${Math.round(matchedPairs / totalPairs * 100)}%`;\n      case \"synonym\":\n      case \"antonym\":\n        // For these exercises: correct answers / total words\n        const totalWords = gameState.selectedWords.length;\n        return `${Math.round(currentScore / totalWords * 100)}%`;\n      case \"definition\":\n        // For definition match: use current score (which reflects actual matches)\n        return `${Math.round(currentScore / gameState.selectedWords.length * 100)}%`;\n      default:\n        return \"0%\";\n    }\n  };\n\n  // Add function to update progress for synonym/antonym exercises\n  const updateProgress = currentIndex => {\n    setGameState(prev => ({\n      ...prev,\n      progress: currentIndex + 1\n    }));\n  };\n  const renderExercise = () => {\n    if (gameOver) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-over-animation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Game Over!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You made 4 mistakes. Don't worry, practice makes perfect!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your score: \", currentScore, \"/\", gameState.selectedWords.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-over-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"game-btn\",\n              onClick: restartCurrentExercise,\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back-btn\",\n              onClick: goBackToMenu,\n              children: \"Back to Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this);\n    }\n    switch (gameState.currentExercise) {\n      case \"definition\":\n        return /*#__PURE__*/_jsxDEV(DefinitionMatch, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this);\n      case \"synonym\":\n        return /*#__PURE__*/_jsxDEV(SynonymExercise, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats,\n          onProgress: updateProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this);\n      case \"antonym\":\n        return /*#__PURE__*/_jsxDEV(AntonymExercise, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats,\n          onProgress: updateProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this);\n      case \"memory\":\n        return /*#__PURE__*/_jsxDEV(MemoryGame, {\n          words: gameState.selectedWords,\n          onAnswer: updateStats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Vocabulary Master Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: !gameState.currentExercise ?\n        /*#__PURE__*/\n        // Main menu - show topic info\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: \"Topic 14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"IELTS Vocabulary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: \"15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Words to Learn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: \"Practice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Vocabulary Skills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // During exercise - show scores and timer\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: currentScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: currentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: getProgressPercentage()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), !gameState.currentExercise ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mistake-info\",\n          children: \"\\u26A0\\uFE0F Maximum 4 mistakes allowed in Definition Match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-btn\",\n        onClick: () => startExercise(\"definition\"),\n        children: \"Definition Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-btn\",\n        onClick: () => startExercise(\"synonym\"),\n        children: \"Synonym Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-btn\",\n        onClick: () => startExercise(\"antonym\"),\n        children: \"Antonym Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-btn\",\n        onClick: () => startExercise(\"memory\"),\n        children: \"Memory Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise active\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"exercise-title\",\n        children: [gameState.currentExercise.charAt(0).toUpperCase() + gameState.currentExercise.slice(1), \" \", \"Exercise\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${gameState.progress / gameState.selectedWords.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this), !gameOver && gameState.currentExercise === \"definition\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistake-counter\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `mistakes ${mistakes >= 3 ? \"danger\" : \"\"}`,\n          children: [\"Mistakes: \", mistakes, \"/4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 13\n      }, this), renderExercise(), !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: goBackToMenu,\n        children: \"Back to Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"foLe2gjPNKxxqJ0X7pUGPDGEVZQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DefinitionMatch","SynonymExercise","AntonymExercise","MemoryGame","jsxDEV","_jsxDEV","Fragment","_Fragment","initialStats","correctAnswers","totalQuestions","currentStreak","bestStreak","initialGameState","currentExercise","stats","progress","selectedWords","matchedPairs","Set","vocabularyData","id","word","definition","synonyms","antonyms","App","_s","gameState","setGameState","exerciseStartTime","setExerciseStartTime","currentScore","setCurrentScore","currentTime","setCurrentTime","mistakes","setMistakes","gameOver","setGameOver","interval","setInterval","elapsed","Math","floor","Date","now","minutes","seconds","toString","padStart","clearInterval","startExercise","type","prev","slice","goBackToMenu","restartCurrentExercise","updateStats","isCorrect","newStats","max","newMistakes","getProgressPercentage","length","totalPairs","size","round","totalWords","updateProgress","currentIndex","renderExercise","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","words","onAnswer","onProgress","charAt","toUpperCase","style","width","_c","$RefreshReg$"],"sources":["/Users/kseniia/Desktop/WillPsGn/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles/Game.css\";\nimport { GameState, Word, GameStats, ExerciseType } from \"./types/game\";\nimport DefinitionMatch from \"./components/DefinitionMatch\";\nimport SynonymExercise from \"./components/SynonymExercise\";\nimport AntonymExercise from \"./components/AntonymExercise\";\nimport MemoryGame from \"./components/MemoryGame\";\n\nconst initialStats: GameStats = {\n  correctAnswers: 0,\n  totalQuestions: 0,\n  currentStreak: 0,\n  bestStreak: 0,\n};\n\nconst initialGameState: GameState = {\n  currentExercise: null,\n  stats: initialStats,\n  progress: 0,\n  selectedWords: [],\n  matchedPairs: new Set(),\n};\n\n// IELTS Vocabulary data from the screenshot\nconst vocabularyData: Word[] = [\n  {\n    id: 1,\n    word: \"Chain reaction\",\n    definition: \"A series of events, each of which causes the next\",\n    synonyms: [\"Sequence\", \"Series\", \"Cascade\"],\n    antonyms: [\n      \"Isolation\",\n      \"Single event\",\n      \"Independence\",\n      \"Separation\",\n      \"Individual action\",\n      \"Standalone\",\n      \"Unconnected\",\n    ],\n  },\n  {\n    id: 2,\n    word: \"Consequence\",\n    definition: \"The results or effects of something\",\n    synonyms: [\"Result\", \"Effect\", \"Outcome\"],\n    antonyms: [\n      \"Cause\",\n      \"Origin\",\n      \"Source\",\n      \"Beginning\",\n      \"Start\",\n      \"Root\",\n      \"Trigger\",\n      \"Reason\",\n    ],\n  },\n  {\n    id: 3,\n    word: \"Impact\",\n    definition:\n      \"A sudden and powerful effect on a situation, process, or person\",\n    synonyms: [\"Effect\", \"Influence\", \"Force\"],\n    antonyms: [\n      \"Weakness\",\n      \"Insignificance\",\n      \"Neglect\",\n      \"Powerlessness\",\n      \"Ineffectiveness\",\n      \"Gentleness\",\n      \"Softness\",\n    ],\n  },\n  {\n    id: 4,\n    word: \"Influence\",\n    definition: \"To affect what people do or what happens in situations\",\n    synonyms: [\"Affect\", \"Sway\", \"Impact\"],\n    antonyms: [\n      \"Independence\",\n      \"Autonomy\",\n      \"Resistance\",\n      \"Immunity\",\n      \"Freedom\",\n      \"Self-reliance\",\n    ],\n  },\n  {\n    id: 5,\n    word: \"Outcome\",\n    definition:\n      \"The situation that exists at the end of an activity or process\",\n    synonyms: [\"Result\", \"End\", \"Conclusion\"],\n    antonyms: [\n      \"Beginning\",\n      \"Start\",\n      \"Cause\",\n      \"Origin\",\n      \"Input\",\n      \"Commencement\",\n      \"Introduction\",\n    ],\n  },\n  {\n    id: 6,\n    word: \"Repercussion\",\n    definition:\n      \"Unpleasant things that happen as a result of an action or event\",\n    synonyms: [\"Consequence\", \"Aftermath\", \"Backlash\"],\n    antonyms: [\n      \"Benefit\",\n      \"Advantage\",\n      \"Reward\",\n      \"Blessing\",\n      \"Positive outcome\",\n      \"Good result\",\n      \"Bonus\",\n    ],\n  },\n  {\n    id: 7,\n    word: \"Affect\",\n    definition: \"To influence or cause someone or something to change\",\n    synonyms: [\"Influence\", \"Impact\", \"Alter\"],\n    antonyms: [\n      \"Ignore\",\n      \"Preserve\",\n      \"Maintain\",\n      \"Leave alone\",\n      \"Keep unchanged\",\n      \"Neglect\",\n      \"Disregard\",\n    ],\n  },\n  {\n    id: 8,\n    word: \"Contribute\",\n    definition: \"To be one of the causes of an event or situation\",\n    synonyms: [\"Add\", \"Help\", \"Assist\"],\n    antonyms: [\n      \"Hinder\",\n      \"Prevent\",\n      \"Block\",\n      \"Obstruct\",\n      \"Impede\",\n      \"Subtract\",\n      \"Remove\",\n      \"Withdraw\",\n    ],\n  },\n  {\n    id: 9,\n    word: \"Determine\",\n    definition: \"To cause something to be of a particular kind or nature\",\n    synonyms: [\"Decide\", \"Establish\", \"Fix\"],\n    antonyms: [\n      \"Ignore\",\n      \"Neglect\",\n      \"Randomize\",\n      \"Confuse\",\n      \"Uncertain\",\n      \"Undecided\",\n      \"Flexible\",\n    ],\n  },\n  {\n    id: 10,\n    word: \"Generate\",\n    definition: \"To cause something to begin and develop\",\n    synonyms: [\"Create\", \"Produce\", \"Cause\"],\n    antonyms: [\n      \"Destroy\",\n      \"Stop\",\n      \"End\",\n      \"Eliminate\",\n      \"Remove\",\n      \"Prevent\",\n      \"Block\",\n      \"Terminate\",\n    ],\n  },\n  {\n    id: 11,\n    word: \"Induce\",\n    definition: \"To cause a state or condition\",\n    synonyms: [\"Cause\", \"Bring about\", \"Lead to\"],\n    antonyms: [\n      \"Prevent\",\n      \"Stop\",\n      \"Block\",\n      \"Discourage\",\n      \"Deter\",\n      \"Inhibit\",\n      \"Suppress\",\n    ],\n  },\n  {\n    id: 12,\n    word: \"Provoke\",\n    definition: \"To cause a reaction or response\",\n    synonyms: [\"Trigger\", \"Cause\", \"Arouse\"],\n    antonyms: [\n      \"Calm\",\n      \"Soothe\",\n      \"Prevent\",\n      \"Pacify\",\n      \"Appease\",\n      \"Comfort\",\n      \"Relax\",\n    ],\n  },\n  {\n    id: 13,\n    word: \"Result\",\n    definition: \"To cause a particular situation or event to happen\",\n    synonyms: [\"Lead to\", \"Cause\", \"End in\"],\n    antonyms: [\n      \"Cause\",\n      \"Beginning\",\n      \"Start\",\n      \"Origin\",\n      \"Unfinished\",\n      \"Incomplete\",\n      \"Ongoing\",\n      \"Process\",\n      \"Input\",\n    ],\n  },\n  {\n    id: 14,\n    word: \"Stem\",\n    definition: \"To originate or be caused by something\",\n    synonyms: [\"Arise\", \"Originate\", \"Spring\"],\n    antonyms: [\n      \"End\",\n      \"Finish\",\n      \"Conclude\",\n      \"Terminate\",\n      \"Result\",\n      \"Lead to\",\n      \"Cause\",\n    ],\n  },\n  {\n    id: 15,\n    word: \"Trigger\",\n    definition: \"To cause an event or situation to begin\",\n    synonyms: [\"Cause\", \"Start\", \"Activate\"],\n    antonyms: [\"Stop\", \"Prevent\", \"End\", \"Finish\", \"Halt\", \"Block\", \"Inhibit\"],\n  },\n];\n\nconst App: React.FC = () => {\n  const [gameState, setGameState] = useState<GameState>(initialGameState);\n  const [exerciseStartTime, setExerciseStartTime] = useState<number>(0);\n  const [currentScore, setCurrentScore] = useState<number>(0);\n  const [currentTime, setCurrentTime] = useState<string>(\"00:00\");\n  const [mistakes, setMistakes] = useState<number>(0);\n  const [gameOver, setGameOver] = useState<boolean>(false);\n\n  // Timer effect to update time every second\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    if (gameState.currentExercise && exerciseStartTime && !gameOver) {\n      interval = setInterval(() => {\n        const elapsed = Math.floor((Date.now() - exerciseStartTime) / 1000);\n        const minutes = Math.floor(elapsed / 60);\n        const seconds = elapsed % 60;\n        setCurrentTime(\n          `${minutes.toString().padStart(2, \"0\")}:${seconds\n            .toString()\n            .padStart(2, \"0\")}`\n        );\n      }, 1000);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [gameState.currentExercise, exerciseStartTime, gameOver]);\n\n  const startExercise = (type: ExerciseType) => {\n    setGameState((prev) => ({\n      ...prev,\n      currentExercise: type,\n      progress: 0,\n      selectedWords:\n        type === \"memory\" ? vocabularyData.slice(0, 6) : vocabularyData,\n      matchedPairs: new Set(),\n    }));\n    setExerciseStartTime(Date.now());\n    setCurrentScore(0);\n    setCurrentTime(\"00:00\");\n    setMistakes(0);\n    setGameOver(false);\n  };\n\n  const goBackToMenu = () => {\n    setGameState((prev) => ({\n      ...prev,\n      currentExercise: null,\n      progress: 0,\n      selectedWords: [],\n      matchedPairs: new Set(),\n    }));\n    setExerciseStartTime(0);\n    setCurrentScore(0);\n    setCurrentTime(\"00:00\");\n    setMistakes(0);\n    setGameOver(false);\n  };\n\n  const restartCurrentExercise = () => {\n    if (gameState.currentExercise) {\n      startExercise(gameState.currentExercise);\n    }\n  };\n\n  const updateStats = (isCorrect: boolean) => {\n    if (gameOver) return; // Don't update if game is over\n\n    setGameState((prev) => {\n      const newStats = { ...prev.stats };\n      newStats.totalQuestions++;\n\n      if (isCorrect) {\n        newStats.correctAnswers++;\n        newStats.currentStreak++;\n        newStats.bestStreak = Math.max(\n          newStats.bestStreak,\n          newStats.currentStreak\n        );\n        setCurrentScore((prev) => prev + 1);\n      } else {\n        newStats.currentStreak = 0;\n\n        // Only count mistakes for Definition Match exercise\n        if (gameState.currentExercise === \"definition\") {\n          setMistakes((prev) => {\n            const newMistakes = prev + 1;\n            if (newMistakes >= 4) {\n              setGameOver(true);\n            }\n            return newMistakes;\n          });\n        }\n      }\n\n      return {\n        ...prev,\n        stats: newStats,\n      };\n    });\n  };\n\n  // Calculate progress percentage based on exercise type\n  const getProgressPercentage = () => {\n    if (!gameState.currentExercise || gameState.selectedWords.length === 0) {\n      return \"0%\";\n    }\n\n    switch (gameState.currentExercise) {\n      case \"memory\":\n        // For memory game: matched pairs / total pairs\n        const totalPairs = gameState.selectedWords.length;\n        const matchedPairs = gameState.matchedPairs.size;\n        return `${Math.round((matchedPairs / totalPairs) * 100)}%`;\n\n      case \"synonym\":\n      case \"antonym\":\n        // For these exercises: correct answers / total words\n        const totalWords = gameState.selectedWords.length;\n        return `${Math.round((currentScore / totalWords) * 100)}%`;\n\n      case \"definition\":\n        // For definition match: use current score (which reflects actual matches)\n        return `${Math.round(\n          (currentScore / gameState.selectedWords.length) * 100\n        )}%`;\n\n      default:\n        return \"0%\";\n    }\n  };\n\n  // Add function to update progress for synonym/antonym exercises\n  const updateProgress = (currentIndex: number) => {\n    setGameState((prev) => ({\n      ...prev,\n      progress: currentIndex + 1,\n    }));\n  };\n\n  const renderExercise = () => {\n    if (gameOver) {\n      return (\n        <div className=\"game-over-container\">\n          <div className=\"game-over-animation\">\n            <h2>Game Over!</h2>\n            <p>You made 4 mistakes. Don't worry, practice makes perfect!</p>\n            <p>\n              Your score: {currentScore}/{gameState.selectedWords.length}\n            </p>\n            <div className=\"game-over-buttons\">\n              <button className=\"game-btn\" onClick={restartCurrentExercise}>\n                Try Again\n              </button>\n              <button className=\"back-btn\" onClick={goBackToMenu}>\n                Back to Menu\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    switch (gameState.currentExercise) {\n      case \"definition\":\n        return (\n          <DefinitionMatch\n            words={gameState.selectedWords}\n            onAnswer={updateStats}\n          />\n        );\n      case \"synonym\":\n        return (\n          <SynonymExercise\n            words={gameState.selectedWords}\n            onAnswer={updateStats}\n            onProgress={updateProgress}\n          />\n        );\n      case \"antonym\":\n        return (\n          <AntonymExercise\n            words={gameState.selectedWords}\n            onAnswer={updateStats}\n            onProgress={updateProgress}\n          />\n        );\n      case \"memory\":\n        return (\n          <MemoryGame words={gameState.selectedWords} onAnswer={updateStats} />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"header\">\n        <h1 className=\"title\">Vocabulary Master Game</h1>\n        <div className=\"stats\">\n          {!gameState.currentExercise ? (\n            // Main menu - show topic info\n            <>\n              <div className=\"stat\">\n                <div className=\"stat-value\">Topic 14</div>\n                <div className=\"stat-label\">IELTS Vocabulary</div>\n              </div>\n              <div className=\"stat\">\n                <div className=\"stat-value\">15</div>\n                <div className=\"stat-label\">Words to Learn</div>\n              </div>\n              <div className=\"stat\">\n                <div className=\"stat-value\">Practice</div>\n                <div className=\"stat-label\">Vocabulary Skills</div>\n              </div>\n            </>\n          ) : (\n            // During exercise - show scores and timer\n            <>\n              <div className=\"stat\">\n                <div className=\"stat-value\">{currentScore}</div>\n                <div className=\"stat-label\">Score</div>\n              </div>\n              <div className=\"stat\">\n                <div className=\"stat-value\">{currentTime}</div>\n                <div className=\"stat-label\">Time</div>\n              </div>\n              <div className=\"stat\">\n                <div className=\"stat-value\">{getProgressPercentage()}</div>\n                <div className=\"stat-label\">Progress</div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      {!gameState.currentExercise ? (\n        <div className=\"game-menu\">\n          <div className=\"game-info\">\n            <p className=\"mistake-info\">\n              ⚠️ Maximum 4 mistakes allowed in Definition Match\n            </p>\n          </div>\n          <button\n            className=\"game-btn\"\n            onClick={() => startExercise(\"definition\")}\n          >\n            Definition Match\n          </button>\n          <button className=\"game-btn\" onClick={() => startExercise(\"synonym\")}>\n            Synonym Exercise\n          </button>\n          <button className=\"game-btn\" onClick={() => startExercise(\"antonym\")}>\n            Antonym Exercise\n          </button>\n          <button className=\"game-btn\" onClick={() => startExercise(\"memory\")}>\n            Memory Game\n          </button>\n        </div>\n      ) : (\n        <div className=\"exercise active\">\n          <h2 className=\"exercise-title\">\n            {gameState.currentExercise.charAt(0).toUpperCase() +\n              gameState.currentExercise.slice(1)}{\" \"}\n            Exercise\n          </h2>\n          <div className=\"progress-bar\">\n            <div\n              className=\"progress-fill\"\n              style={{\n                width: `${\n                  (gameState.progress / gameState.selectedWords.length) * 100\n                }%`,\n              }}\n            />\n          </div>\n          {!gameOver && gameState.currentExercise === \"definition\" && (\n            <div className=\"mistake-counter\">\n              <span className={`mistakes ${mistakes >= 3 ? \"danger\" : \"\"}`}>\n                Mistakes: {mistakes}/4\n              </span>\n            </div>\n          )}\n          {renderExercise()}\n          {!gameOver && (\n            <button className=\"back-btn\" onClick={goBackToMenu}>\n              Back to Menu\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}