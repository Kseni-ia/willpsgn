{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SynonymExercise=_ref=>{let{words,onAnswer,onProgress}=_ref;const[currentWordIndex,setCurrentWordIndex]=useState(0);const[userInput,setUserInput]=useState(\"\");const[feedback,setFeedback]=useState(null);const[correctAnswers,setCorrectAnswers]=useState(0);const[exerciseCompleted,setExerciseCompleted]=useState(false);const currentWord=words[currentWordIndex];// Update progress whenever word index changes\nReact.useEffect(()=>{onProgress(currentWordIndex);},[currentWordIndex,onProgress]);const handleSubmit=e=>{e.preventDefault();const isCorrect=currentWord.synonyms.some(synonym=>synonym.toLowerCase()===userInput.toLowerCase());setFeedback(isCorrect?\"correct\":\"incorrect\");if(isCorrect){setCorrectAnswers(prev=>prev+1);}onAnswer(isCorrect);if(isCorrect){// Auto-advance for correct answers\nsetTimeout(()=>{moveToNextWord();},1500);}// For incorrect answers, do NOT auto-advance - user must click \"Next Word\"\n};const moveToNextWord=()=>{if(currentWordIndex<words.length-1){setCurrentWordIndex(prev=>prev+1);setUserInput(\"\");setFeedback(null);}else{// Exercise completed\nsetExerciseCompleted(true);setFeedback(\"correct\");}};const skipWord=()=>{if(currentWordIndex<words.length-1){setCurrentWordIndex(prev=>prev+1);setUserInput(\"\");setFeedback(null);}};const restartExercise=()=>{setCurrentWordIndex(0);setUserInput(\"\");setFeedback(null);setCorrectAnswers(0);setExerciseCompleted(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"syn-ant-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"word-progress\",children:exerciseCompleted?\"Final Score: \".concat(correctAnswers):\"Word \".concat(currentWordIndex+1,\" of \").concat(words.length,\" | Score: \").concat(correctAnswers)}),/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-left\",children:[!exerciseCompleted&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"word-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"word-label\",children:\"Word:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"word-value\",children:currentWord.word})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"word-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"word-label\",children:\"Synonym:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input-field \".concat(feedback||\"\"),value:userInput,onChange:e=>setUserInput(e.target.value),placeholder:\"Enter a synonym...\",disabled:feedback!==null})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"game-btn\",disabled:!userInput.trim()||feedback!==null,children:\"Check Answer\"}),feedback===null&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"skip-btn\",onClick:skipWord,children:\"Skip Word\"}),feedback===\"incorrect\"&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"next-word-btn\",onClick:moveToNextWord,children:\"Next Word\"})]})]})]}),exerciseCompleted&&/*#__PURE__*/_jsx(\"div\",{className:\"completion-buttons\",children:/*#__PURE__*/_jsx(\"button\",{className:\"game-btn\",onClick:restartExercise,children:\"Try Again\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-right\",children:[feedback&&!exerciseCompleted&&/*#__PURE__*/_jsxs(\"div\",{className:\"feedback \".concat(feedback),children:[feedback===\"correct\"?\"Excellent! Correct synonym!\":\"Not quite right. Try thinking of a word with similar meaning.\",feedback===\"incorrect\"&&/*#__PURE__*/_jsxs(\"div\",{className:\"hint\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Hint:\"}),\" One of the synonyms is:\",\" \",currentWord.synonyms[0]]})]}),exerciseCompleted&&/*#__PURE__*/_jsxs(\"div\",{className:\"feedback correct\",children:[\"\\uD83C\\uDF89 Exercise completed! Your score: \",correctAnswers,\"/\",words.length,\" \",\"(\",words.length>0?Math.round(correctAnswers/words.length*100):0,\"%)\"]})]})]})]});};export default SynonymExercise;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SynonymExercise","_ref","words","onAnswer","onProgress","currentWordIndex","setCurrentWordIndex","userInput","setUserInput","feedback","setFeedback","correctAnswers","setCorrectAnswers","exerciseCompleted","setExerciseCompleted","currentWord","useEffect","handleSubmit","e","preventDefault","isCorrect","synonyms","some","synonym","toLowerCase","prev","setTimeout","moveToNextWord","length","skipWord","restartExercise","className","children","concat","word","onSubmit","type","value","onChange","target","placeholder","disabled","trim","onClick","Math","round"],"sources":["/Users/kseniia/Desktop/WillPsGn/src/components/SynonymExercise.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Word } from \"../types/game\";\n\ninterface SynonymExerciseProps {\n  words: Word[];\n  onAnswer: (isCorrect: boolean) => void;\n  onProgress: (currentIndex: number) => void;\n}\n\nconst SynonymExercise: React.FC<SynonymExerciseProps> = ({\n  words,\n  onAnswer,\n  onProgress,\n}) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [userInput, setUserInput] = useState(\"\");\n  const [feedback, setFeedback] = useState<\"correct\" | \"incorrect\" | null>(\n    null\n  );\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [exerciseCompleted, setExerciseCompleted] = useState(false);\n\n  const currentWord = words[currentWordIndex];\n\n  // Update progress whenever word index changes\n  React.useEffect(() => {\n    onProgress(currentWordIndex);\n  }, [currentWordIndex, onProgress]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const isCorrect = currentWord.synonyms.some(\n      (synonym) => synonym.toLowerCase() === userInput.toLowerCase()\n    );\n\n    setFeedback(isCorrect ? \"correct\" : \"incorrect\");\n    if (isCorrect) {\n      setCorrectAnswers((prev) => prev + 1);\n    }\n    onAnswer(isCorrect);\n\n    if (isCorrect) {\n      // Auto-advance for correct answers\n      setTimeout(() => {\n        moveToNextWord();\n      }, 1500);\n    }\n    // For incorrect answers, do NOT auto-advance - user must click \"Next Word\"\n  };\n\n  const moveToNextWord = () => {\n    if (currentWordIndex < words.length - 1) {\n      setCurrentWordIndex((prev) => prev + 1);\n      setUserInput(\"\");\n      setFeedback(null);\n    } else {\n      // Exercise completed\n      setExerciseCompleted(true);\n      setFeedback(\"correct\");\n    }\n  };\n\n  const skipWord = () => {\n    if (currentWordIndex < words.length - 1) {\n      setCurrentWordIndex((prev) => prev + 1);\n      setUserInput(\"\");\n      setFeedback(null);\n    }\n  };\n\n  const restartExercise = () => {\n    setCurrentWordIndex(0);\n    setUserInput(\"\");\n    setFeedback(null);\n    setCorrectAnswers(0);\n    setExerciseCompleted(false);\n  };\n\n  return (\n    <div className=\"syn-ant-container\">\n      <div className=\"word-progress\">\n        {exerciseCompleted\n          ? `Final Score: ${correctAnswers}`\n          : `Word ${currentWordIndex + 1} of ${\n              words.length\n            } | Score: ${correctAnswers}`}\n      </div>\n\n      <div className=\"exercise-content\">\n        <div className=\"exercise-left\">\n          {!exerciseCompleted && (\n            <>\n              <div className=\"word-row\">\n                <span className=\"word-label\">Word:</span>\n                <span className=\"word-value\">{currentWord.word}</span>\n              </div>\n\n              <form onSubmit={handleSubmit}>\n                <div className=\"word-row\">\n                  <span className=\"word-label\">Synonym:</span>\n                  <input\n                    type=\"text\"\n                    className={`input-field ${feedback || \"\"}`}\n                    value={userInput}\n                    onChange={(e) => setUserInput(e.target.value)}\n                    placeholder=\"Enter a synonym...\"\n                    disabled={feedback !== null}\n                  />\n                </div>\n\n                <div className=\"button-group\">\n                  <button\n                    type=\"submit\"\n                    className=\"game-btn\"\n                    disabled={!userInput.trim() || feedback !== null}\n                  >\n                    Check Answer\n                  </button>\n\n                  {feedback === null && (\n                    <button\n                      type=\"button\"\n                      className=\"skip-btn\"\n                      onClick={skipWord}\n                    >\n                      Skip Word\n                    </button>\n                  )}\n\n                  {feedback === \"incorrect\" && (\n                    <button\n                      type=\"button\"\n                      className=\"next-word-btn\"\n                      onClick={moveToNextWord}\n                    >\n                      Next Word\n                    </button>\n                  )}\n                </div>\n              </form>\n            </>\n          )}\n\n          {exerciseCompleted && (\n            <div className=\"completion-buttons\">\n              <button className=\"game-btn\" onClick={restartExercise}>\n                Try Again\n              </button>\n            </div>\n          )}\n        </div>\n\n        <div className=\"exercise-right\">\n          {feedback && !exerciseCompleted && (\n            <div className={`feedback ${feedback}`}>\n              {feedback === \"correct\"\n                ? \"Excellent! Correct synonym!\"\n                : \"Not quite right. Try thinking of a word with similar meaning.\"}\n              {feedback === \"incorrect\" && (\n                <div className=\"hint\">\n                  <strong>Hint:</strong> One of the synonyms is:{\" \"}\n                  {currentWord.synonyms[0]}\n                </div>\n              )}\n            </div>\n          )}\n\n          {exerciseCompleted && (\n            <div className=\"feedback correct\">\n              🎉 Exercise completed! Your score: {correctAnswers}/{words.length}{\" \"}\n              (\n              {words.length > 0\n                ? Math.round((correctAnswers / words.length) * 100)\n                : 0}\n              %)\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SynonymExercise;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}